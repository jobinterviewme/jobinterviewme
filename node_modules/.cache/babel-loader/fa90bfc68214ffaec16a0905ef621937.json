{"ast":null,"code":"import _defineProperty from \"C:/Users/ighil/Documents/ReactProyects/JobInterViewMe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"C:/Users/ighil/Documents/ReactProyects/JobInterViewMe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/ighil/Documents/ReactProyects/JobInterViewMe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"C:/Users/ighil/Documents/ReactProyects/JobInterViewMe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:/Users/ighil/Documents/ReactProyects/JobInterViewMe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ighil\\\\Documents\\\\ReactProyects\\\\JobInterViewMe\\\\src\\\\views\\\\FormPreparadoredit\\\\Presentacionedit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport { Button } from 'primereact/button';\nimport sectorJSON from '../../assets/json/sectores.json';\nimport perfilJSON from '../../assets/json/perfiles.json';\nimport idiomasJSON from '../../assets/json/idiomas.json';\nimport { Form, Input, Upload, Space, Select, TimePicker, Row, Col, Tag, InputNumber } from 'antd';\nimport ImgCrop from 'antd-img-crop';\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { Option } from \"antd/lib/mentions\";\nimport { connect } from \"react-redux\";\nimport * as authAction from \"../../store/actions/authAction\";\n\nvar Presentacion = function Presentacion(props) {\n  _s();\n\n  var _React$createElement;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      sectores = _useState2[0],\n      setSectores = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      idiomas = _useState4[0],\n      setIdiomas = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nombreImagen = _useState6[0],\n      setNombreImagen = _useState6[1];\n\n  var _useState7 = useState(props.valores.imgPefil !== \"\" ? props.valores.imgPefil : null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      imgPefil = _useState8[0],\n      setImgPerfil = _useState8[1];\n\n  var _useState9 = useState(props.valores.sectores !== \"\" ? props.valores.sectores : null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedSectores = _useState10[0],\n      setSelectedSectores = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      filteredSectores = _useState12[0],\n      setFilteredSectores = _useState12[1];\n\n  var _useState13 = useState(props.valores.idiomas !== \"\" ? props.valores.idiomas : null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      selectedIdiomas = _useState14[0],\n      setSelectedIdiomas = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      filteredIdiomas = _useState16[0],\n      setFilteredIdiomas = _useState16[1];\n\n  var _useState17 = useState(props.global.usuario.nombreperfil),\n      _useState18 = _slicedToArray(_useState17, 2),\n      nombrePerfil = _useState18[0],\n      setNombrePerfil = _useState18[1];\n\n  var _useState19 = useState(props.global.usuario.annosexperiencia),\n      _useState20 = _slicedToArray(_useState19, 2),\n      annos = _useState20[0],\n      setannos = _useState20[1];\n\n  var _useState21 = useState(props.global.usuario.experiencia),\n      _useState22 = _slicedToArray(_useState21, 2),\n      experiencia = _useState22[0],\n      setexperiencia = _useState22[1];\n\n  var _useState23 = useState(props.global.usuario.imagen),\n      _useState24 = _slicedToArray(_useState23, 2),\n      imagen = _useState24[0],\n      setimagen = _useState24[1];\n\n  var _useState25 = useState(props.global.usuario.sectores.split(\",\")),\n      _useState26 = _slicedToArray(_useState25, 2),\n      sectores1 = _useState26[0],\n      setsectores1 = _useState26[1];\n\n  var _useState27 = useState(props.global.usuario.perfiles.split(\",\")),\n      _useState28 = _slicedToArray(_useState27, 2),\n      perfiles = _useState28[0],\n      setperfiles = _useState28[1];\n\n  var _useState29 = useState(props.global.usuario.idiomas.split(\",\")),\n      _useState30 = _slicedToArray(_useState29, 2),\n      idiomas1 = _useState30[0],\n      setidiomas1 = _useState30[1];\n\n  useEffect(function () {\n    setSectores(sectorJSON.sectores);\n    setIdiomas(idiomasJSON.idiomas);\n  }, []);\n  useEffect(function () {\n    setValoresInicioales(props.valores);\n  }, [props.valores]);\n\n  var searchSector = function searchSector(event) {\n    setTimeout(function () {\n      var _filteredSectores;\n\n      if (!event.query.trim().length) {\n        _filteredSectores = _toConsumableArray(sectores);\n      } else {\n        _filteredSectores = sectores.filter(function (sector) {\n          return sector.name.toLowerCase().startsWith(event.query.toLowerCase());\n        });\n      }\n\n      setFilteredSectores(_filteredSectores);\n    }, 250);\n  };\n\n  var searchIdioma = function searchIdioma(event) {\n    setTimeout(function () {\n      var _filteredIdioma;\n\n      if (!event.query.trim().length) {\n        _filteredIdioma = _toConsumableArray(idiomas);\n      } else {\n        _filteredIdioma = idiomas.filter(function (idiom) {\n          return idiom.nombre.toLowerCase().startsWith(event.query.toLowerCase());\n        });\n      }\n\n      setFilteredIdiomas(_filteredIdioma);\n    }, 250);\n  };\n\n  var handleSubmit = function handleSubmit(values) {\n    console.log(values);\n    var bandera = true;\n\n    if (bandera) {\n      if (values.nombrePerfil === undefined) {\n        values.nombrePerfil = nombrePerfil;\n      }\n\n      if (values.imagenperfil === undefined) {\n        values.imagenperfil = imagen;\n      }\n\n      if (values.annosExperiencia === undefined) {\n        values.annosExperiencia = annos;\n      }\n\n      if (values.experiencia === undefined) {\n        values.experiencia = experiencia;\n      }\n\n      if (values.imagenperfilt === undefined) {\n        value.imagenperfilt = imagen;\n      }\n\n      if (values.sectores === undefined) {\n        console.log(sectores1);\n        value.sectores = sectores1.toString();\n      }\n\n      if (values.perfiles === undefined) {\n        value.perfiles = perfiles;\n      }\n\n      if (values.idiomas === undefined) {\n        value.idiomas = idiomas1;\n      }\n\n      if (values.imagenperfil === undefined) {\n        value.imagenperfil = imagen;\n      }\n\n      props.primerosValores(values);\n      props.goToStep(3);\n    } else {\n      setSubmitting(false);\n    }\n  };\n\n  var _useState31 = useState(props.valores),\n      _useState32 = _slicedToArray(_useState31, 2),\n      valoresIniciales = _useState32[0],\n      setValoresInicioales = _useState32[1];\n\n  var listaSectores = function listaSectores() {\n    var respuesta = selectedSectores[0].name;\n    selectedSectores.map(function (sector, index) {\n      if (index > 0) {\n        respuesta = respuesta + \",\" + sector.name;\n      }\n    });\n    return respuesta;\n  };\n\n  var listaIdiomas = function listaIdiomas() {\n    var respuesta = selectedIdiomas[0].codigo;\n    selectedIdiomas.map(function (idioma, index) {\n      if (index > 0) {\n        respuesta = respuesta + \",\" + idioma.codigo;\n      }\n    });\n    return respuesta;\n  };\n\n  var onChangeImg = function onChangeImg(e) {\n    var file = e.target.files[0];\n\n    if (file) {\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = function () {\n        var base64 = reader.result;\n        var s = base64.split(\",\"); //valoresIniciales.imagenperfil=e.target\n\n        setImgPerfil(s[1]); //setNombrePerfil(e.name)\n        //setImagen(s[1])\n        //setImagenX(s[1])\n      };\n    }\n  };\n\n  var goStep2 = function goStep2() {\n    //props.goToStep(2)\n    console.log(valoresIniciales);\n  };\n\n  var onPreview = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(file) {\n      var src, image, imgWindow;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              src = file.url;\n\n              if (src) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 4;\n              return new Promise(function (resolve) {\n                var reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n\n                reader.onload = function () {\n                  return resolve(reader.result);\n                };\n              });\n\n            case 4:\n              src = _context.sent;\n\n            case 5:\n              image = new Image();\n              image.src = src;\n              imgWindow = window.open(src);\n              imgWindow.document.write(image.outerHTML);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onPreview(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var onChange = function onChange(_ref2) {\n    var newFileList = _ref2.fileList;\n    setFileList(newFileList);\n    setImgPerfil(newFileList);\n  };\n\n  var _useState33 = useState([]),\n      _useState34 = _slicedToArray(_useState33, 2),\n      fileList = _useState34[0],\n      setFileList = _useState34[1];\n\n  var sectoresOptions = [];\n  sectorJSON.sectores.map(function (sector) {\n    sectoresOptions.push( /*#__PURE__*/React.createElement(Option, {\n      key: sector.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 30\n      }\n    }, sector.name));\n  });\n  var perfilesOptions = [];\n  perfilJSON.perfiles.map(function (perfil) {\n    perfilesOptions.push( /*#__PURE__*/React.createElement(Option, {\n      key: perfil.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 30\n      }\n    }, perfil.name));\n  });\n  var idiomasOptions = [];\n  idiomasJSON.idiomas.map(function (idioma) {\n    idiomasOptions.push( /*#__PURE__*/React.createElement(Option, {\n      key: idioma.nombre,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 29\n      }\n    }, idioma.nombre));\n  });\n  return /*#__PURE__*/React.createElement(Form, {\n    layout: \"vertical\",\n    className: \"register-form\",\n    name: \"formPresent\",\n    onFinish: handleSubmit,\n    autoComplete: \"off\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"OfertaFrom\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    className: \"OfertaCol1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Nombre de tu perfil\",\n    name: \"nombrePerfil\",\n    rules: [{\n      required: nombrePerfil === \"\" ? true : false,\n      message: 'Por favor introduzca el nombre de su perfil'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    defaultValue: nombrePerfil,\n    id: \"in\",\n    value: nombrePerfil,\n    placeholder: \"Nombre de tu perfil\",\n    onChange: function onChange(e) {\n      setNombrePerfil(e.target.value);\n    },\n    name: \"nombrePerfil\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"A\\xF1os de experiencia en RRHH\",\n    name: \"annosExperiencia\",\n    rules: [{\n      required: annos === \"\" ? true : false,\n      message: 'Por favor introduzca los años de experiencia'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    name: \"annosExperiencia\",\n    min: 0,\n    max: 70,\n    value: annos,\n    defaultValue: annos,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Tu experiencia (m\\xE1x. 250 caracteres)\",\n    name: \"experiencia\",\n    rules: [{\n      required: experiencia === \"\" ? true : false,\n      message: 'Por favor introduzca los años de experiencia'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, (_React$createElement = {\n    showCount: true,\n    rows: 6,\n    maxlength: 250,\n    maxLength: 250,\n    defaultValue: experiencia\n  }, _defineProperty(_React$createElement, \"defaultValue\", experiencia), _defineProperty(_React$createElement, \"id\", \"experiencia\"), _defineProperty(_React$createElement, \"name\", \"experiencia\"), _defineProperty(_React$createElement, \"aria-describedby\", \"username2-help\"), _defineProperty(_React$createElement, \"__self\", _this), _defineProperty(_React$createElement, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 25\n  }), _React$createElement)))), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    className: \"OfertaCol1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Imagen de perfil\",\n    name: \"imagenperfilt\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ImgCrop, {\n    rotate: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Upload, {\n    fileList: fileList,\n    onChange: onChange,\n    onPreview: onPreview,\n    listType: \"picture-card\",\n    name: \"imagenperfil\",\n    id: \"imagenperfil\",\n    defaultValue: imagen,\n    value: imagen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 29\n    }\n  }, fileList.length < 1 && '+ Adiciona tu imagen de perfil'))), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Sectores\",\n    name: \"sectores\",\n    rules: [{\n      required: sectores1 === \"\" ? true : false,\n      message: 'Por favor introduzca los sectores'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    mode: \"tags\",\n    value: selectedSectores,\n    defaultValue: sectores1,\n    style: {\n      width: '100%'\n    },\n    placeholder: \"Sectores\",\n    onChange: function onChange(e) {\n      return setSelectedSectores(e.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 25\n    }\n  }, sectoresOptions)), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Perfiles\",\n    name: \"perfiles\",\n    rules: [{\n      required: perfiles === \"\" ? true : false,\n      message: 'Por favor introduzca el perfil'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    id: \"perfiles\",\n    mode: \"tags\",\n    style: {\n      width: '100%'\n    },\n    defaultValue: perfiles,\n    placeholder: \"Perfiles\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 25\n    }\n  }, perfilesOptions)), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Idiomas\",\n    name: \"idiomas\",\n    rules: [{\n      required: idiomas1 === \"\" ? true : false,\n      message: 'Por favor introduzca los idiomas'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    mode: \"tags\",\n    value: selectedIdiomas,\n    style: {\n      width: '100%'\n    },\n    defaultValue: idiomas1,\n    placeholder: \"Idiomas\",\n    onChange: function onChange(e) {\n      return setSelectedIdiomas(e.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 25\n    }\n  }, idiomasOptions)))), /*#__PURE__*/React.createElement(GridContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-field p-col p-md-6 p-col-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    label: \"Siguiente\",\n    type: \"submit\",\n    icon: \"pi pi-check\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 29\n    }\n  }))))));\n};\n\n_s(Presentacion, \"GJW3J95aaQIfjQPzM1VbFE13iYA=\");\n\n_c = Presentacion;\n\nvar mapStateToProps = function mapStateToProps(rootReducer) {\n  return {\n    global: rootReducer.auth\n  };\n};\n\nexport default connect(mapStateToProps, authAction)(Presentacion);\n\nvar _c;\n\n$RefreshReg$(_c, \"Presentacion\");","map":{"version":3,"sources":["C:/Users/ighil/Documents/ReactProyects/JobInterViewMe/src/views/FormPreparadoredit/Presentacionedit.js"],"names":["React","useEffect","useState","GridContainer","GridItem","Button","sectorJSON","perfilJSON","idiomasJSON","Form","Input","Upload","Space","Select","TimePicker","Row","Col","Tag","InputNumber","ImgCrop","TextArea","Option","connect","authAction","Presentacion","props","sectores","setSectores","idiomas","setIdiomas","nombreImagen","setNombreImagen","valores","imgPefil","setImgPerfil","selectedSectores","setSelectedSectores","filteredSectores","setFilteredSectores","selectedIdiomas","setSelectedIdiomas","filteredIdiomas","setFilteredIdiomas","global","usuario","nombreperfil","nombrePerfil","setNombrePerfil","annosexperiencia","annos","setannos","experiencia","setexperiencia","imagen","setimagen","split","sectores1","setsectores1","perfiles","setperfiles","idiomas1","setidiomas1","setValoresInicioales","searchSector","event","setTimeout","_filteredSectores","query","trim","length","filter","sector","name","toLowerCase","startsWith","searchIdioma","_filteredIdioma","idiom","nombre","handleSubmit","values","console","log","bandera","undefined","imagenperfil","annosExperiencia","imagenperfilt","value","toString","primerosValores","goToStep","setSubmitting","valoresIniciales","listaSectores","respuesta","map","index","listaIdiomas","codigo","idioma","onChangeImg","e","file","target","files","reader","FileReader","readAsDataURL","onload","base64","result","s","goStep2","onPreview","src","url","Promise","resolve","originFileObj","image","Image","imgWindow","window","open","document","write","outerHTML","onChange","newFileList","fileList","setFileList","sectoresOptions","push","perfilesOptions","perfil","idiomasOptions","required","message","width","mapStateToProps","rootReducer","auth"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport { Button } from 'primereact/button';\r\nimport sectorJSON from '../../assets/json/sectores.json';\r\nimport perfilJSON from '../../assets/json/perfiles.json';\r\n\r\nimport idiomasJSON from '../../assets/json/idiomas.json';\r\nimport { Form, Input, Upload, Space, Select, TimePicker, Row, Col, Tag, InputNumber } from 'antd';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { Option } from \"antd/lib/mentions\";\r\nimport { connect } from \"react-redux\";\r\nimport * as authAction from \"../../store/actions/authAction\"\r\n\r\n\r\nconst Presentacion = (props) => {\r\n    const [sectores, setSectores] = useState([]);\r\n    const [idiomas, setIdiomas] = useState(null)\r\n    const [nombreImagen, setNombreImagen] = useState(\"\")\r\n\r\n    const [imgPefil, setImgPerfil] = useState(props.valores.imgPefil !== \"\" ? props.valores.imgPefil : null)\r\n    const [selectedSectores, setSelectedSectores] = useState(props.valores.sectores !== \"\" ? props.valores.sectores : null);\r\n    const [filteredSectores, setFilteredSectores] = useState(null);\r\n    const [selectedIdiomas, setSelectedIdiomas] = useState(props.valores.idiomas !== \"\" ? props.valores.idiomas : null);\r\n    const [filteredIdiomas, setFilteredIdiomas] = useState(null);\r\n\r\n    const [nombrePerfil, setNombrePerfil] = useState(props.global.usuario.nombreperfil)\r\n    const [annos, setannos] = useState(props.global.usuario.annosexperiencia)\r\n    const [experiencia, setexperiencia] = useState(props.global.usuario.experiencia)\r\n    const [imagen, setimagen] = useState(props.global.usuario.imagen)\r\n    const [sectores1, setsectores1] = useState(props.global.usuario.sectores.split(\",\"))\r\n    const [perfiles, setperfiles] = useState(props.global.usuario.perfiles.split(\",\"))\r\n    const [idiomas1, setidiomas1] = useState(props.global.usuario.idiomas.split(\",\"))\r\n\r\n    useEffect(() => {\r\n        setSectores(sectorJSON.sectores);\r\n        setIdiomas(idiomasJSON.idiomas)\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        setValoresInicioales(props.valores)\r\n    }, [props.valores]);\r\n\r\n    const searchSector = (event) => {\r\n        setTimeout(() => {\r\n            let _filteredSectores;\r\n            if (!event.query.trim().length) {\r\n                _filteredSectores = [...sectores];\r\n            }\r\n            else {\r\n                _filteredSectores = sectores.filter((sector) => {\r\n                    return sector.name.toLowerCase().startsWith(event.query.toLowerCase());\r\n                });\r\n            }\r\n            setFilteredSectores(_filteredSectores);\r\n        }, 250);\r\n    }\r\n\r\n    const searchIdioma = (event) => {\r\n        setTimeout(() => {\r\n            let _filteredIdioma;\r\n            if (!event.query.trim().length) {\r\n                _filteredIdioma = [...idiomas];\r\n            }\r\n            else {\r\n                _filteredIdioma = idiomas.filter((idiom) => {\r\n                    return idiom.nombre.toLowerCase().startsWith(event.query.toLowerCase());\r\n                });\r\n            }\r\n            setFilteredIdiomas(_filteredIdioma);\r\n        }, 250);\r\n    }\r\n\r\n    const handleSubmit = (values) => {\r\n        console.log(values);\r\n        let bandera = true\r\n\r\n        if (bandera) {\r\n\r\n            if (values.nombrePerfil === undefined) {\r\n                values.nombrePerfil = nombrePerfil\r\n            }\r\n            if (values.imagenperfil === undefined) {\r\n                values.imagenperfil = imagen\r\n            }\r\n            if (values.annosExperiencia === undefined) {\r\n                values.annosExperiencia = annos\r\n            }\r\n            if (values.experiencia === undefined) {\r\n                values.experiencia = experiencia\r\n            }\r\n            if (values.imagenperfilt === undefined) {\r\n                value.imagenperfilt = imagen\r\n            }\r\n            if (values.sectores === undefined) {\r\n                console.log(sectores1)\r\n\r\n                value.sectores = sectores1.toString()\r\n            }\r\n            if (values.perfiles === undefined) {\r\n                value.perfiles = perfiles\r\n            }\r\n            if (values.idiomas === undefined) {\r\n                value.idiomas = idiomas1\r\n            }\r\n            if (values.imagenperfil === undefined) {\r\n                value.imagenperfil = imagen\r\n            }\r\n            props.primerosValores(values)\r\n            props.goToStep(3);\r\n        } else {\r\n            setSubmitting(false);\r\n        }\r\n    }\r\n\r\n    const [valoresIniciales, setValoresInicioales] = useState(props.valores)\r\n\r\n\r\n    const listaSectores = () => {\r\n        let respuesta = selectedSectores[0].name\r\n        selectedSectores.map((sector, index) => {\r\n            if (index > 0) {\r\n                respuesta = respuesta + \",\" + sector.name\r\n            }\r\n        })\r\n        return respuesta\r\n    }\r\n    const listaIdiomas = () => {\r\n        let respuesta = selectedIdiomas[0].codigo\r\n        selectedIdiomas.map((idioma, index) => {\r\n            if (index > 0) {\r\n                respuesta = respuesta + \",\" + idioma.codigo\r\n            }\r\n        })\r\n        return respuesta\r\n    }\r\n    const onChangeImg = (e) => {\r\n        let file = e.target.files[0]\r\n        if (file) {\r\n            const reader = new FileReader()\r\n            reader.readAsDataURL(file)\r\n            reader.onload = function () {\r\n                var base64 = reader.result\r\n                var s = base64.split(\",\")\r\n                //valoresIniciales.imagenperfil=e.target\r\n                setImgPerfil(s[1])\r\n                //setNombrePerfil(e.name)\r\n                //setImagen(s[1])\r\n                //setImagenX(s[1])\r\n            }\r\n        }\r\n    }\r\n    const goStep2 = () => {\r\n        //props.goToStep(2)\r\n        console.log(valoresIniciales)\r\n    }\r\n\r\n\r\n    const onPreview = async file => {\r\n        let src = file.url;\r\n        if (!src) {\r\n            src = await new Promise(resolve => {\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(file.originFileObj);\r\n                reader.onload = () => resolve(reader.result);\r\n            });\r\n        }\r\n        const image = new Image();\r\n        image.src = src;\r\n        const imgWindow = window.open(src);\r\n        imgWindow.document.write(image.outerHTML);\r\n    };\r\n\r\n    const onChange = ({ fileList: newFileList }) => {\r\n        setFileList(newFileList);\r\n        setImgPerfil(newFileList);\r\n\r\n    };\r\n\r\n    const [fileList, setFileList] = useState([]\r\n    );\r\n\r\n    const sectoresOptions = [];\r\n    sectorJSON.sectores.map((sector) => {\r\n        sectoresOptions.push(<Option key={sector.name}>{sector.name}</Option>);\r\n    });\r\n\r\n    const perfilesOptions = [];\r\n    perfilJSON.perfiles.map((perfil) => {\r\n        perfilesOptions.push(<Option key={perfil.name}>{perfil.name}</Option>);\r\n    });\r\n\r\n    const idiomasOptions = [];\r\n    idiomasJSON.idiomas.map((idioma) => {\r\n        idiomasOptions.push(<Option key={idioma.nombre}>{idioma.nombre}</Option>);\r\n    });\r\n\r\n    return (\r\n\r\n        <Form layout=\"vertical\" className=\"register-form\" name=\"formPresent\" onFinish={handleSubmit} autoComplete=\"off\">\r\n            <Row className=\"OfertaFrom\">\r\n                <Col span={12} className=\"OfertaCol1\">\r\n                    <Form.Item\r\n                        label=\"Nombre de tu perfil\"\r\n                        name=\"nombrePerfil\"\r\n\r\n                        rules={[{\r\n                            required: nombrePerfil === \"\" ? true : false,\r\n                            message: 'Por favor introduzca el nombre de su perfil',\r\n                        },]}\r\n                    >\r\n                        <Input\r\n                            defaultValue={nombrePerfil}\r\n                            id=\"in\"\r\n                            value={nombrePerfil}\r\n                            placeholder=\"Nombre de tu perfil\"\r\n                            onChange={(e) => { setNombrePerfil(e.target.value) }}\r\n                            name=\"nombrePerfil\"\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"Años de experiencia en RRHH\"\r\n                        name=\"annosExperiencia\"\r\n                        rules={[{\r\n                            required: annos === \"\" ? true : false,\r\n                            message: 'Por favor introduzca los años de experiencia',\r\n                        },]}\r\n                    >\r\n                        <InputNumber name=\"annosExperiencia\" min={0} max={70} value={annos} defaultValue={annos} />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"Tu experiencia (máx. 250 caracteres)\"\r\n                        name=\"experiencia\"\r\n                        rules={[{\r\n                            required: experiencia === \"\" ? true : false,\r\n                            message: 'Por favor introduzca los años de experiencia',\r\n                        },]}\r\n                    >\r\n                        <TextArea showCount rows={6} maxlength={250} maxLength={250} defaultValue={experiencia} defaultValue={experiencia} id=\"experiencia\" name=\"experiencia\" aria-describedby=\"username2-help\" />\r\n                    </Form.Item>\r\n\r\n                </Col>\r\n\r\n                <Col span={12} className=\"OfertaCol1\">\r\n\r\n                    <Form.Item\r\n                        label=\"Imagen de perfil\"\r\n                        name=\"imagenperfilt\"\r\n                    >\r\n                        <ImgCrop rotate>\r\n                            <Upload\r\n                                fileList={fileList}\r\n                                onChange={onChange}\r\n                                onPreview={onPreview}\r\n                                listType=\"picture-card\"\r\n                                name=\"imagenperfil\"\r\n                                id=\"imagenperfil\"\r\n                                defaultValue={imagen}\r\n                                value={imagen}\r\n\r\n                            >\r\n                                {fileList.length < 1 && '+ Adiciona tu imagen de perfil'}\r\n                            </Upload>\r\n                        </ImgCrop>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"Sectores\"\r\n                        name=\"sectores\"\r\n                        rules={[{\r\n                            required: sectores1 === \"\" ? true : false,\r\n                            message: 'Por favor introduzca los sectores',\r\n                        },]}\r\n                    >\r\n                        <Select mode=\"tags\" value={selectedSectores} defaultValue={sectores1} style={{ width: '100%' }} placeholder=\"Sectores\" onChange={(e) => setSelectedSectores(e.value)}>\r\n                            {sectoresOptions}\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"Perfiles\"\r\n                        name=\"perfiles\"\r\n                        rules={[{\r\n                            required: perfiles === \"\" ? true : false,\r\n                            message: 'Por favor introduzca el perfil',\r\n                        },]}\r\n                    >\r\n                        <Select id=\"perfiles\" mode=\"tags\" style={{ width: '100%' }} defaultValue={perfiles} placeholder=\"Perfiles\" >\r\n                            {perfilesOptions}\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"Idiomas\"\r\n                        name=\"idiomas\"\r\n                        rules={[{\r\n                            required: idiomas1 === \"\" ? true : false,\r\n                            message: 'Por favor introduzca los idiomas',\r\n                        },]}\r\n                    >\r\n                        <Select mode=\"tags\" value={selectedIdiomas} style={{ width: '100%' }} defaultValue={idiomas1} placeholder=\"Idiomas\" onChange={(e) => setSelectedIdiomas(e.value)}>\r\n                            {idiomasOptions}\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={2}>\r\n                    <div className=\"p-field p-col p-md-6 p-col-12\" >\r\n                        <div className={\"center\"} >\r\n                            <Button label=\"Siguiente\" type=\"submit\" icon=\"pi pi-check\" />\r\n                        </div>\r\n                    </div>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </Form >\r\n\r\n\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (rootReducer) => {\r\n    return { global: rootReducer.auth };\r\n};\r\n\r\nexport default connect(mapStateToProps, authAction)(Presentacion);\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}