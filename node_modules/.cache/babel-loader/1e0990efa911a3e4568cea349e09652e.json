{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ighil\\\\Documents\\\\ReactProyects\\\\JobInterViewMe\\\\src\\\\components\\\\DialogCard\\\\DialogCard.component.jsx\";\n\nimport React, { useState } from 'react';\nimport { Button, Modal } from \"antd\";\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nvar confirm = Modal.confirm;\n\nvar DialogCard = function DialogCard(props) {\n  function showPromiseConfirm() {\n    confirm({\n      title: 'Do you want to delete these items?',\n      icon: /*#__PURE__*/React.createElement(ExclamationCircleOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }\n      }),\n      content: 'When clicked the OK button, this dialog will be closed after 1 second',\n      onOk: function onOk() {\n        return new Promise(function (resolve, reject) {\n          setTimeout(Math.random() > 0.5 ? resolve : reject, 1000);\n        })[\"catch\"](function () {\n          return console.log('Oops errors!');\n        });\n      },\n      onCancel: function onCancel() {}\n    });\n  }\n\n  function showDeleteConfirm() {\n    confirm({\n      title: 'Are you sure delete this task?',\n      icon: /*#__PURE__*/React.createElement(ExclamationCircleOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }),\n      content: 'Some descriptions',\n      okText: 'Yes',\n      okType: 'danger',\n      cancelText: 'No',\n      onOk: function onOk() {\n        console.log('OK');\n      },\n      onCancel: function onCancel() {\n        console.log('Cancel');\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    title: \"20px to Top\",\n    style: {\n      top: 20\n    },\n    visible: props.modal1Visible,\n    onOk: function onOk() {\n      return props.setModal1Visible(false);\n    },\n    onCancel: function onCancel() {\n      return props.setModal1Visible(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Resumen de tu cita\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Tu cita con Adele, el d\\xEDa XX / XX / XXXX\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Reuni\\xF3n por ZOOM.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Cualquier duda en relaci\\xF3n a esta preparaci\\xF3n, no dudes en contactar con: jobinterviewme@gmail.com\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: showPromiseConfirm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"With promise\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: showDeleteConfirm,\n    type: \"dashed\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Delete\")));\n};\n\n_c = DialogCard;\nexport default DialogCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DialogCard\");","map":{"version":3,"sources":["C:/Users/ighil/Documents/ReactProyects/JobInterViewMe/src/components/DialogCard/DialogCard.component.jsx"],"names":["React","useState","Button","Modal","ExclamationCircleOutlined","confirm","DialogCard","props","showPromiseConfirm","title","icon","content","onOk","Promise","resolve","reject","setTimeout","Math","random","console","log","onCancel","showDeleteConfirm","okText","okType","cancelText","top","modal1Visible","setModal1Visible"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAUC,MAAV,EAAkBC,KAAlB,QAAgC,MAAhC;AACA,SAASC,yBAAT,QAA0C,mBAA1C;IAEQC,O,GAAYF,K,CAAZE,O;;AAER,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAE5B,WAASC,kBAAT,GAA8B;AAC5BH,IAAAA,OAAO,CAAC;AACNI,MAAAA,KAAK,EAAE,oCADD;AAENC,MAAAA,IAAI,eAAE,oBAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA;AAGNC,MAAAA,OAAO,EAAE,uEAHH;AAINC,MAAAA,IAJM,kBAIC;AACL,eAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,UAAAA,UAAU,CAACC,IAAI,CAACC,MAAL,KAAgB,GAAhB,GAAsBJ,OAAtB,GAAgCC,MAAjC,EAAyC,IAAzC,CAAV;AACD,SAFM,WAEE;AAAA,iBAAMI,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAN;AAAA,SAFF,CAAP;AAGD,OARK;AASNC,MAAAA,QATM,sBASK,CAAE;AATP,KAAD,CAAP;AAWD;;AAED,WAASC,iBAAT,GAA6B;AAC3BjB,IAAAA,OAAO,CAAC;AACNI,MAAAA,KAAK,EAAE,gCADD;AAENC,MAAAA,IAAI,eAAE,oBAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA;AAGNC,MAAAA,OAAO,EAAE,mBAHH;AAINY,MAAAA,MAAM,EAAE,KAJF;AAKNC,MAAAA,MAAM,EAAE,QALF;AAMNC,MAAAA,UAAU,EAAE,IANN;AAONb,MAAAA,IAPM,kBAOC;AACLO,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,OATK;AAUNC,MAAAA,QAVM,sBAUK;AACTF,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD;AAZK,KAAD,CAAP;AAcD;;AAGD,sBAAO,uDAEL,oBAAC,KAAD;AACM,IAAA,KAAK,EAAC,aADZ;AAEM,IAAA,KAAK,EAAE;AAAEM,MAAAA,GAAG,EAAE;AAAP,KAFb;AAGM,IAAA,OAAO,EAAEnB,KAAK,CAACoB,aAHrB;AAIM,IAAA,IAAI,EAAE;AAAA,aAAMpB,KAAK,CAACqB,gBAAN,CAAuB,KAAvB,CAAN;AAAA,KAJZ;AAKM,IAAA,QAAQ,EAAE;AAAA,aAAMrB,KAAK,CAACqB,gBAAN,CAAuB,KAAvB,CAAN;AAAA,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BATJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gHAVJ,eAYI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEpB,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZJ,eAaI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEc,iBAAjB;AAAoC,IAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,CAFK,CAAP;AAyBD,CA3DD;;KAAMhB,U;AA4DN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport {  Button, Modal  } from \"antd\";\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\n\r\nconst { confirm } = Modal;\r\n\r\nconst DialogCard = (props) => {\r\n\r\n  function showPromiseConfirm() {\r\n    confirm({\r\n      title: 'Do you want to delete these items?',\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: 'When clicked the OK button, this dialog will be closed after 1 second',\r\n      onOk() {\r\n        return new Promise((resolve, reject) => {\r\n          setTimeout(Math.random() > 0.5 ? resolve : reject, 1000);\r\n        }).catch(() => console.log('Oops errors!'));\r\n      },\r\n      onCancel() {},\r\n    });\r\n  }\r\n\r\n  function showDeleteConfirm() {\r\n    confirm({\r\n      title: 'Are you sure delete this task?',\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: 'Some descriptions',\r\n      okText: 'Yes',\r\n      okType: 'danger',\r\n      cancelText: 'No',\r\n      onOk() {\r\n        console.log('OK');\r\n      },\r\n      onCancel() {\r\n        console.log('Cancel');\r\n      },\r\n    });\r\n  }\r\n  \r\n  \r\n  return(<>\r\n    \r\n    <Modal\r\n          title=\"20px to Top\"\r\n          style={{ top: 20 }}\r\n          visible={props.modal1Visible}\r\n          onOk={() => props.setModal1Visible(false)}\r\n          onCancel={() => props.setModal1Visible(false)}\r\n        >\r\n        <p>Resumen de tu cita</p>\r\n        <p>Tu cita con Adele, el día XX / XX / XXXX</p>\r\n        <p>Reunión por ZOOM.</p>\r\n        <p>Cualquier duda en relación a esta preparación, no dudes en contactar con: jobinterviewme@gmail.com</p>\r\n\r\n        <Button onClick={showPromiseConfirm}>With promise</Button>\r\n        <Button onClick={showDeleteConfirm} type=\"dashed\">\r\n          Delete\r\n        </Button>\r\n\r\n      </Modal>\r\n    \r\n    \r\n    \r\n    </>)\r\n\r\n}\r\nexport default DialogCard;\r\n"]},"metadata":{},"sourceType":"module"}