{"ast":null,"code":"import _slicedToArray from \"C:/Users/ighil/Documents/ReactProyects/Javier/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ighil\\\\Documents\\\\ReactProyects\\\\Javier\\\\src\\\\views\\\\FormPreparador\\\\Presentacion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport classNames from \"classnames\";\nimport { ErrorMessage, Formik, Field } from \"formik\";\nimport { FileUpload } from 'primereact/fileupload';\nimport * as yup from \"yup\";\nimport { Button } from 'primereact/button';\n\nvar Presentacion = function Presentacion(props) {\n  _s();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      imgPefil = _useState2[0],\n      setImgPerfil = _useState2[1];\n\n  var valoresIniciales = {\n    nombrePerfil: \"\",\n    annosExperiencia: 0,\n    experiencia: \"\",\n    imagenperfil: \"\",\n    sectores: \"\",\n    perfiles: \"\",\n    idiomas: \"\"\n  };\n\n  var handleSubmit = function handleSubmit(values, _ref) {\n    var setFieldError = _ref.setFieldError,\n        setSubmitting = _ref.setSubmitting;\n\n    if (imgPefil === null) {\n      setFieldError(\"imagenperfil\", \"Imagen de perfil requerida.\");\n      setSubmitting(false);\n    } else {\n      values.imagenperfil = imgPefil;\n      props.primerosValores(values); //console.log(imgPefil)\n\n      props.goToStep(2);\n    }\n  };\n\n  var onChangeImg = function onChangeImg(e) {\n    //console.log(e.target.files[0])   \n    //console.log(e.target.files[0])  \n    var file = e.target.files[0];\n\n    if (file) {\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = function () {\n        var base64 = reader.result; //console.log(base64)\n\n        var s = base64.split(\",\"); //valoresIniciales.imagenperfil=e.target\n\n        setImgPerfil(s[1]); //setImagen(s[1])\n        //setImagenX(s[1])\n      };\n    }\n  };\n\n  var goStep2 = function goStep2() {\n    //props.goToStep(2)\n    console.log(valoresIniciales);\n  };\n\n  return /*#__PURE__*/React.createElement(GridContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    xs: 12,\n    sm: 12,\n    md: 10,\n    className: \"left40px margintop50px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: valoresIniciales,\n    onSubmit: handleSubmit,\n    validationSchema: validationSchema,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, function (_ref2) {\n    var values = _ref2.values,\n        errors = _ref2.errors,\n        handleSubmit = _ref2.handleSubmit;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"register-form\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(GridContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" p-col-12\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"nombrePerfil\",\n      className: \"text textMarca\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 41\n      }\n    }, \"Nombre de tu perfil\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      id: \"nombrePerfil\",\n      name: \"nombrePerfil\",\n      type: \"text\",\n      className: \"with100\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"nombrePerfil\",\n      className: \"invalid-feedback\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 46\n      }\n    }, function (message) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 123\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        className: \"p-error p-d-block\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 128\n        }\n      }, message));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \" p-col-12\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"annosExperiencia\",\n      className: \"text textMarca\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 41\n      }\n    }, \"A\\xF1os de experiencia en RRHH\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      id: \"annosExperiencia\",\n      name: \"annosExperiencia\",\n      type: \"number\",\n      className: \"with100\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"annosExperiencia\",\n      className: \"invalid-feedback\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 46\n      }\n    }, function (message) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 127\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        className: \"p-error\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 132\n        }\n      }, message));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-col-12\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"experiencia\",\n      className: \"text textMarca\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 41\n      }\n    }, \"Tu experiencia (m\\xE1x. 40 caracteres)\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"textarea\",\n      id: \"experiencia\",\n      name: \"experiencia\",\n      \"aria-describedby\": \"username2-help\",\n      className: \"with100 height80px p-invalid p-d-block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"experiencia\",\n      className: \"invalid-feedback\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 46\n      }\n    }, function (message) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 122\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        className: \"p-error\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 127\n        }\n      }, message));\n    })))), /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(GridContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" p-col-12\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"imagenperfil\",\n      className: \"text textMarca\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 49\n      }\n    }, \"Imagen de perfil\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      id: \"imagenperfilt\",\n      name: \"imagenperfilt\",\n      onChange: function onChange(e) {\n        onChangeImg(e);\n      },\n      type: \"file\",\n      className: \"with100\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"imagenperfil\",\n      className: \"invalid-feedback\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 54\n      }\n    }, function (message) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 131\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        className: \"p-error\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 136\n        }\n      }, message));\n    })))), /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" p-col-12\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"sectores\",\n      className: \"text textMarca\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 49\n      }\n    }, \"Sectores\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      id: \"sectores\",\n      name: \"sectores\",\n      type: \"text\",\n      className: \"with100\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"sectores\",\n      className: \"invalid-feedback\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 54\n      }\n    }, function (message) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 127\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        className: \"p-error\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 132\n        }\n      }, message));\n    })))), /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-col-12\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"perfiles\",\n      className: \"text textMarca\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 49\n      }\n    }, \"Perfiles\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      id: \"perfiles\",\n      name: \"perfiles\",\n      type: \"text\",\n      className: \"with100\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"perfiles\",\n      className: \"invalid-feedback\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 54\n      }\n    }, function (message) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 127\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        className: \"p-error\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 132\n        }\n      }, message));\n    })))), /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-col-12\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"idiomas\",\n      className: \"text textMarca\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 49\n      }\n    }, \"Idiomas\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      id: \"idiomas\",\n      name: \"idiomas\",\n      type: \"text\",\n      className: \"with100\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"idiomas\",\n      className: \"invalid-feedback\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 54\n      }\n    }, function (message) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 126\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        className: \"p-error\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 131\n        }\n      }, message));\n    }))))))), /*#__PURE__*/React.createElement(GridContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-field p-col p-md-6 p-col-12\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      label: \"Submit\",\n      type: \"submit\",\n      icon: \"pi pi-check\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 45\n      }\n    })))), /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-field p-col p-md-6 p-col-12\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      label: \"Siguiente\",\n      onClick: function onClick() {\n        goStep2();\n      },\n      icon: \"pi pi-check\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 45\n      }\n    }))))));\n  }))));\n};\n\n_s(Presentacion, \"uceLgpIBr0swoDnw9A01LMta4Kk=\");\n\n_c = Presentacion;\nexport default Presentacion;\nvar validationSchema = yup.object().shape({\n  nombrePerfil: yup.string().required(\"Nombre de perfil requerido.\"),\n  annosExperiencia: yup.string().required(\"Años de experiencia requerido.\"),\n  experiencia: yup.string().required(\"Experiencia requerido.\"),\n  sectores: yup.string().required(\"Sectores requerido.\"),\n  perfiles: yup.string().required(\"Perfiles requerido.\"),\n  idiomas: yup.string().required(\"Idiomas requerido.\")\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"Presentacion\");","map":{"version":3,"sources":["C:/Users/ighil/Documents/ReactProyects/Javier/src/views/FormPreparador/Presentacion.js"],"names":["React","useState","GridContainer","GridItem","classNames","ErrorMessage","Formik","Field","FileUpload","yup","Button","Presentacion","props","imgPefil","setImgPerfil","valoresIniciales","nombrePerfil","annosExperiencia","experiencia","imagenperfil","sectores","perfiles","idiomas","handleSubmit","values","setFieldError","setSubmitting","primerosValores","goToStep","onChangeImg","e","file","target","files","reader","FileReader","readAsDataURL","onload","base64","result","s","split","goStep2","console","log","validationSchema","errors","message","object","shape","string","required"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport classNames from \"classnames\";\r\nimport {ErrorMessage, Formik,Field} from \"formik\";\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport * as yup from \"yup\";\r\nimport { Button } from 'primereact/button';\r\n\r\nconst Presentacion=(props)=>{\r\n    const [imgPefil, setImgPerfil]=useState(null)\r\n    const valoresIniciales={\r\n        nombrePerfil:\"\",\r\n        annosExperiencia:0,\r\n        experiencia:\"\",\r\n        imagenperfil: \"\",\r\n        sectores:\"\",\r\n        perfiles: \"\",\r\n        idiomas: \"\",\r\n    }\r\n    const handleSubmit=(values,{setFieldError,setSubmitting})=> {\r\n        \r\n        if(imgPefil===null){\r\n            setFieldError(\"imagenperfil\",\"Imagen de perfil requerida.\")\r\n            setSubmitting(false);\r\n        }else{\r\n            values.imagenperfil=imgPefil\r\n            props.primerosValores(values)\r\n            //console.log(imgPefil)\r\n            props.goToStep(2);\r\n        }\r\n    }\r\n    const onChangeImg=(e)=>{\r\n        //console.log(e.target.files[0])   \r\n        //console.log(e.target.files[0])  \r\n        let file=e.target.files[0]\r\n        if(file){\r\n            const reader=new FileReader()\r\n            reader.readAsDataURL(file)\r\n            reader.onload=function(){\r\n                var base64=reader.result\r\n                //console.log(base64)\r\n                var s=base64.split(\",\")\r\n                //valoresIniciales.imagenperfil=e.target\r\n                setImgPerfil(s[1])\r\n                //setImagen(s[1])\r\n                //setImagenX(s[1])\r\n            }    \r\n        }\r\n    }\r\n    const goStep2=()=>{\r\n        //props.goToStep(2)\r\n        console.log(valoresIniciales)\r\n    }\r\n\r\n    return (\r\n        \r\n        <GridContainer>\r\n            <GridItem xs={12} sm={12} md={12}>\r\n                <div xs={12} sm={12} md={10} className={\"left40px margintop50px\"}>             \r\n                    <Formik initialValues={valoresIniciales} onSubmit={handleSubmit}\r\n                        validationSchema={validationSchema}>\r\n                        {({ values, errors, handleSubmit}) => (\r\n                            <form onSubmit={handleSubmit} className=\"register-form\">\r\n                            <GridContainer >\r\n                                <GridItem xs={12} sm={12} md={5}>\r\n                                    <div className=\" p-col-12\">\r\n                                        <label htmlFor={\"nombrePerfil\"} className=\"text textMarca\">Nombre de tu perfil</label>\r\n                                        <div>\r\n                                            <Field id=\"nombrePerfil\" name=\"nombrePerfil\" type=\"text\" className=\"with100\"/>                                            \r\n                                        </div>\r\n                                        <div><ErrorMessage name={\"nombrePerfil\"} className=\"invalid-feedback\">{message => <div><small className=\"p-error p-d-block\">{message}</small></div>}</ErrorMessage></div>\r\n                                    </div>\r\n                                    <div className=\" p-col-12\">\r\n                                        <label htmlFor={\"annosExperiencia\"} className=\"text textMarca\">Años de experiencia en RRHH</label>\r\n                                        <div>\r\n                                            <Field id=\"annosExperiencia\" name=\"annosExperiencia\" type=\"number\" className=\"with100\"/>                                            \r\n                                        </div>\r\n                                        <div><ErrorMessage name={\"annosExperiencia\"} className=\"invalid-feedback\">{message => <div><small className=\"p-error\">{message}</small></div>}</ErrorMessage></div>\r\n                                    </div>\r\n                                    <div className=\"p-col-12\">\r\n                                        <label htmlFor={\"experiencia\"} className=\"text textMarca\">Tu experiencia (máx. 40 caracteres)</label>\r\n                                        <div>\r\n                                            <Field type=\"textarea\" id=\"experiencia\" name=\"experiencia\" aria-describedby=\"username2-help\" className=\"with100 height80px p-invalid p-d-block\" />\r\n                                        </div>\r\n                                        <div><ErrorMessage name={\"experiencia\"} className=\"invalid-feedback\">{message => <div><small className=\"p-error\">{message}</small></div>}</ErrorMessage></div>\r\n                                    </div>\r\n                                </GridItem>\r\n                                \r\n                                <GridItem xs={12} sm={12} md={5}>\r\n                                    <GridContainer>\r\n                                        <GridItem xs={12} sm={12} md={12}>\r\n                                            <div className=\" p-col-12\">\r\n                                                <label htmlFor={\"imagenperfil\"} className=\"text textMarca\">Imagen de perfil</label>\r\n                                                    <div>                                                        \r\n                                                        <Field id=\"imagenperfilt\" name=\"imagenperfilt\" onChange={(e)=>{onChangeImg(e)}} type=\"file\" className=\"with100\"/>                                            \r\n                                                    </div>\r\n                                                <div><ErrorMessage name={\"imagenperfil\"} className=\"invalid-feedback\">{message => <div><small className=\"p-error\">{message}</small></div>}</ErrorMessage></div>\r\n                                            </div>\r\n                                        </GridItem>\r\n                                        <GridItem xs={12} sm={12} md={12}>\r\n                                            <div className=\" p-col-12\">\r\n                                                <label htmlFor={\"sectores\"} className=\"text textMarca\">Sectores</label>\r\n                                                <div>\r\n                                                    <Field id=\"sectores\" name=\"sectores\" type=\"text\" className=\"with100\"/>                                            \r\n                                                </div>\r\n                                                <div><ErrorMessage name={\"sectores\"} className=\"invalid-feedback\">{message => <div><small className=\"p-error\">{message}</small></div>}</ErrorMessage></div>\r\n                                            </div>\r\n                                        </GridItem>\r\n                                        <GridItem xs={12} sm={12} md={12}>\r\n                                            <div className=\"p-col-12\">\r\n                                                <label htmlFor={\"perfiles\"} className=\"text textMarca\">Perfiles</label>\r\n                                                <div>\r\n                                                    <Field id=\"perfiles\" name=\"perfiles\" type=\"text\" className=\"with100\"/>                                            \r\n                                                </div>\r\n                                                <div><ErrorMessage name={\"perfiles\"} className=\"invalid-feedback\">{message => <div><small className=\"p-error\">{message}</small></div>}</ErrorMessage></div>\r\n                                            </div>\r\n                                        </GridItem>\r\n                                        <GridItem xs={12} sm={12} md={12}>\r\n                                            <div className=\"p-col-12\">\r\n                                                <label htmlFor={\"idiomas\"} className=\"text textMarca\">Idiomas</label>\r\n                                                <div>\r\n                                                    <Field id=\"idiomas\" name=\"idiomas\" type=\"text\" className=\"with100\"/>                                            \r\n                                                </div>\r\n                                                <div><ErrorMessage name={\"idiomas\"} className=\"invalid-feedback\">{message => <div><small className=\"p-error\">{message}</small></div>}</ErrorMessage></div>\r\n                                            </div>\r\n                                        </GridItem>\r\n                                    </GridContainer>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={12} md={2}>\r\n                                    <div className=\"p-field p-col p-md-6 p-col-12\" >\r\n                                        <div className={\"center\"} >\r\n                                            <Button label=\"Submit\" type=\"submit\" icon=\"pi pi-check\" />\r\n                                        </div>                                    \r\n                                    </div>\r\n                                </GridItem>\r\n                                <GridItem xs={12} sm={12} md={2}>\r\n                                    <div className=\"p-field p-col p-md-6 p-col-12\" >\r\n                                        <div className={\"center\"} >\r\n                                            <Button label=\"Siguiente\" onClick={()=> {goStep2()}} icon=\"pi pi-check\" />\r\n                                        </div>                                    \r\n                                    </div>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                        </form>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </GridItem>\r\n        </GridContainer>\r\n    )\r\n};\r\nexport default Presentacion;\r\n\r\nconst validationSchema = yup.object().shape({\r\n    nombrePerfil: yup.string().required(\"Nombre de perfil requerido.\"),\r\n    annosExperiencia: yup.string().required(\"Años de experiencia requerido.\"),\r\n    experiencia: yup.string().required(\"Experiencia requerido.\"),\r\n    sectores: yup.string().required(\"Sectores requerido.\"),\r\n    perfiles: yup.string().required(\"Perfiles requerido.\"),\r\n    idiomas: yup.string().required(\"Idiomas requerido.\")\r\n  });"]},"metadata":{},"sourceType":"module"}