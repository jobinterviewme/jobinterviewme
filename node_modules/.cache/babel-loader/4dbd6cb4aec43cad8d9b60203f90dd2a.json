{"ast":null,"code":"import axios from \"axios\";\nimport { baseURL } from \"configuracion/constantes\"; //import store from '../Store/reducers/rootReducer';\n\nvar axiosConexionConfig = function axiosConexionConfig() {\n  //Create default options\n  var defaultOptions = {\n    baseURL: baseURL,\n    headers: {\n      'Access-Control-Max-Age': '600',\n      'Content-Type': 'application/json'\n    }\n  }; // Create instance\n\n  var instance = axios.create(defaultOptions); //Create an interceptor for each request\n\n  instance.interceptors.request.use(function (config) {\n    var token = localStorage.getItem('access_token'); //console.log(\"token:\"+token)\n\n    if (token) {\n      config.headers.Authorization = 'Bearer ' + token;\n    }\n\n    return config;\n  }); //Create an interceptor for each response\n\n  /*instance.interceptors.response.use(function (response) {\r\n          //console.log(response.data.body.error);\r\n          if (response.data.body.error && response.data.body.error.code===8){\r\n              window.location.href = '/logout'\r\n          } else {\r\n              return response;\r\n          }\r\n      },\r\n      function (error) {\r\n          console.log(error.response);\r\n      }\r\n  );*/\n\n  return instance;\n};\n\nexport default axiosConexionConfig();","map":{"version":3,"sources":["C:/Users/ighil/Documents/ReactProyects/JobInterViewMe/src/conexion/AxiosConexionConfig.js"],"names":["axios","baseURL","axiosConexionConfig","defaultOptions","headers","instance","create","interceptors","request","use","config","token","localStorage","getItem","Authorization"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,0BAAxB,C,CACA;;AACA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAC9B;AACA,MAAMC,cAAc,GAAG;AACnBF,IAAAA,OAAO,EAAEA,OADU;AAEnBG,IAAAA,OAAO,EAAE;AACL,gCAA0B,KADrB;AAEL,sBAAgB;AAFX;AAFU,GAAvB,CAF8B,CAU9B;;AACA,MAAIC,QAAQ,GAAGL,KAAK,CAACM,MAAN,CAAaH,cAAb,CAAf,CAX8B,CAa9B;;AACAE,EAAAA,QAAQ,CAACE,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,UAAUC,MAAV,EAAkB;AAChD,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAd,CADgD,CAEhD;;AACA,QAAIF,KAAJ,EAAW;AACPD,MAAAA,MAAM,CAACN,OAAP,CAAeU,aAAf,GAA+B,YAAYH,KAA3C;AACH;;AACD,WAAOD,MAAP;AACH,GAPD,EAd8B,CAuB9B;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,SAAOL,QAAP;AACH,CArCD;;AAsCA,eAAgBH,mBAAmB,EAAnC","sourcesContent":["import axios from \"axios\";\r\nimport { baseURL } from \"configuracion/constantes\";\r\n//import store from '../Store/reducers/rootReducer';\r\nconst axiosConexionConfig = () => {\r\n    //Create default options\r\n    const defaultOptions = {\r\n        baseURL: baseURL,\r\n        headers: {\r\n            'Access-Control-Max-Age': '600',\r\n            'Content-Type': 'application/json',\r\n        }\r\n    };\r\n\r\n    // Create instance\r\n    let instance = axios.create(defaultOptions);\r\n\r\n    //Create an interceptor for each request\r\n    instance.interceptors.request.use(function (config) {\r\n        const token = localStorage.getItem('access_token');\r\n        //console.log(\"token:\"+token)\r\n        if (token) {\r\n            config.headers.Authorization = 'Bearer ' + token;\r\n        }\r\n        return config;\r\n    });\r\n\r\n    //Create an interceptor for each response\r\n    /*instance.interceptors.response.use(function (response) {\r\n            //console.log(response.data.body.error);\r\n            if (response.data.body.error && response.data.body.error.code===8){\r\n                window.location.href = '/logout'\r\n            } else {\r\n                return response;\r\n            }\r\n        },\r\n        function (error) {\r\n            console.log(error.response);\r\n        }\r\n    );*/\r\n    return instance;\r\n};\r\nexport default (axiosConexionConfig());\r\n"]},"metadata":{},"sourceType":"module"}