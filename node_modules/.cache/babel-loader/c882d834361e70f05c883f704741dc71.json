{"ast":null,"code":"import _slicedToArray from \"C:/Users/ighil/Documents/ReactProyects/JobInterViewMe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ighil\\\\Documents\\\\ReactProyects\\\\JobInterViewMe\\\\src\\\\components\\\\CardCitas\\\\CardCitas.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Tooltip } from 'antd';\nimport { makeStyles, Icon } from '@material-ui/core';\nimport styles from \"../../assets/jss/material-kit-react/tooltipsStyle.js\";\nimport './CardCitas.style.scss';\nimport Button from \"components/CustomButtons/Button.js\";\nimport DialogCard from 'components/DialogCard/DialogCard.component.jsx';\nvar useStyles = makeStyles(styles);\n\nvar CardCitas = function CardCitas(props) {\n  _s();\n\n  var nombre = props.nombre,\n      toolTipsText = props.toolTipsText,\n      confirmada = props.confirmada,\n      fecha = props.fecha,\n      lugar = props.lugar;\n  var cita = props.cita;\n  var tipo = props.tipo;\n  var today = new Date();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      Modal1Visible = _useState2[0],\n      _setModal1Visible = _useState2[1];\n\n  if (tipo !== \"deshabilitado\") {\n    if (confirmada === \"true\") {\n      tipo = \"aceptado\";\n    } else {\n      if (confirmada === \"false\" && fecha - today < 2 * 86400000) {\n        tipo = \"warning\";\n      } else {\n        tipo = \"pendiente\";\n      }\n    }\n  }\n\n  var ConfirmarCita = function ConfirmarCita(e) {\n    e.preventDefault();\n\n    _setModal1Visible(true);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick(e) {\n      return ConfirmarCita(e);\n    },\n    id: tipo,\n    className: \"cardCitas\",\n    tooltip: \"Enter your username\",\n    tooltipOptions: {\n      position: 'right'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, nombre, /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }), tipo !== \"deshabilitado\" ? tipo === \"warning\" ? /*#__PURE__*/React.createElement(\"span\", {\n    id: \"alerta\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 35\n    }\n  }, \"\\xA1Cita pr\\xF3xima sin confirmaci\\xF3n!\") : /*#__PURE__*/React.createElement(React.Fragment, null) : /*#__PURE__*/React.createElement(React.Fragment, null)), /*#__PURE__*/React.createElement(DialogCard, {\n    cita: cita,\n    setReload: function setReload(value) {\n      return props.setReload(value);\n    },\n    modal1Visible: Modal1Visible,\n    setModal1Visible: function setModal1Visible(value) {\n      return _setModal1Visible(value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(CardCitas, \"sRL8/3KObAQB5fYA3jLq3kxngy8=\");\n\n_c = CardCitas;\nexport default CardCitas;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardCitas\");","map":{"version":3,"sources":["C:/Users/ighil/Documents/ReactProyects/JobInterViewMe/src/components/CardCitas/CardCitas.component.jsx"],"names":["React","useState","Tooltip","makeStyles","Icon","styles","Button","DialogCard","useStyles","CardCitas","props","nombre","toolTipsText","confirmada","fecha","lugar","cita","tipo","today","Date","Modal1Visible","setModal1Visible","ConfirmarCita","e","preventDefault","position","value","setReload"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,OAAT,QAAwB,MAAxB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAgC,mBAAhC;AACA,OAAOC,MAAP,MAAmB,sDAAnB;AACA,OAAO,wBAAP;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,OAAOC,UAAP,MAAuB,gDAAvB;AAEA,IAAMC,SAAS,GAAGL,UAAU,CAACE,MAAD,CAA5B;;AAEA,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAAA;;AAAA,MAEtBC,MAFsB,GAE2BD,KAF3B,CAEtBC,MAFsB;AAAA,MAEdC,YAFc,GAE2BF,KAF3B,CAEdE,YAFc;AAAA,MAEAC,UAFA,GAE2BH,KAF3B,CAEAG,UAFA;AAAA,MAEYC,KAFZ,GAE2BJ,KAF3B,CAEYI,KAFZ;AAAA,MAEmBC,KAFnB,GAE2BL,KAF3B,CAEmBK,KAFnB;AAG7B,MAAMC,IAAI,GAACN,KAAK,CAACM,IAAjB;AAEA,MAAIC,IAAI,GAAGP,KAAK,CAACO,IAAjB;AACA,MAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;;AAN6B,kBAQalB,QAAQ,CAAC,KAAD,CARrB;AAAA;AAAA,MAQtBmB,aARsB;AAAA,MAQPC,iBARO;;AAU7B,MAAGJ,IAAI,KAAG,eAAV,EAA0B;AAE1B,QAAGJ,UAAU,KAAK,MAAlB,EAA4B;AACxBI,MAAAA,IAAI,GAAG,UAAP;AACH,KAFD,MAEK;AACD,UAAGJ,UAAU,KAAK,OAAf,IAA2BC,KAAK,GAACI,KAAN,GAAa,IAAE,QAA7C,EAA0D;AAEvDD,QAAAA,IAAI,GAAG,SAAP;AAAiB,OAFpB,MAGQ;AACAA,QAAAA,IAAI,GAAG,WAAP;AACH;AACR;AAAC;;AAGD,MAAMK,aAAa,GAAC,SAAdA,aAAc,CAACC,CAAD,EAAK;AACtBA,IAAAA,CAAC,CAACC,cAAF;;AACAH,IAAAA,iBAAgB,CAAC,IAAD,CAAhB;AACF,GAHD;;AAKG,sBACI,uDACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAE,iBAAAE,CAAC;AAAA,aAAID,aAAa,CAACC,CAAD,CAAjB;AAAA,KADd;AAEI,IAAA,EAAE,EAAEN,IAFR;AAGI,IAAA,SAAS,EAAC,WAHd;AAII,IAAA,OAAO,EAAC,qBAJZ;AAIkC,IAAA,cAAc,EAAE;AAACQ,MAAAA,QAAQ,EAAE;AAAX,KAJlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOCd,MAPD,eAOQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPR,EASCM,IAAI,KAAG,eAAP,GACGA,IAAI,KAAG,SAAP,gBAAkB;AAAM,IAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAAlB,gBACF,yCAFD,gBAES,yCAXV,CADJ,eAgBI,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAED,IAAlB;AAAwB,IAAA,SAAS,EAAE,mBAACU,KAAD;AAAA,aAAShB,KAAK,CAACiB,SAAN,CAAgBD,KAAhB,CAAT;AAAA,KAAnC;AAAoE,IAAA,aAAa,EAAEN,aAAnF;AAAkG,IAAA,gBAAgB,EAAE,0BAACM,KAAD;AAAA,aAASL,iBAAgB,CAACK,KAAD,CAAzB;AAAA,KAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,CADJ;AAoBH,CAjDD;;GAAMjB,S;;KAAAA,S;AAmDN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { Tooltip } from 'antd';\r\nimport { makeStyles, Icon} from '@material-ui/core';\r\nimport styles from \"../../assets/jss/material-kit-react/tooltipsStyle.js\";\r\nimport './CardCitas.style.scss';\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport DialogCard from 'components/DialogCard/DialogCard.component.jsx';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst CardCitas = (props) => {\r\n\r\nconst {nombre, toolTipsText, confirmada, fecha, lugar}= props;\r\nconst cita=props.cita;\r\n\r\nlet tipo = props.tipo;\r\nconst today = new Date();\r\n\r\nconst [Modal1Visible, setModal1Visible] = useState(false);\r\n\r\nif(tipo!==\"deshabilitado\"){\r\n    \r\nif(confirmada === \"true\"   ){\r\n    tipo = \"aceptado\";\r\n}else{\r\n    if(confirmada === \"false\" && (fecha-today<(2*86400000))  ){\r\n        \r\n       tipo = \"warning\"}\r\n        else{\r\n            tipo = \"pendiente\";\r\n        }\r\n}}\r\n\r\n\r\n const ConfirmarCita=(e)=>{\r\n    e.preventDefault();\r\n    setModal1Visible(true);\r\n }\r\n\r\n    return (\r\n        <>\r\n            <Button \r\n                onClick={e => ConfirmarCita(e) }\r\n                id={tipo}\r\n                className=\"cardCitas\"  \r\n                tooltip=\"Enter your username\" tooltipOptions={{position: 'right'}}         \r\n            >\r\n\r\n            {nombre}<br/>\r\n\r\n            {tipo!==\"deshabilitado\"?\r\n                tipo===\"warning\"?(<span id=\"alerta\">¡Cita próxima sin confirmación!</span>)\r\n            :(<></>):(<></>)}\r\n\r\n            </Button>\r\n\r\n            <DialogCard cita={cita} setReload={(value)=>props.setReload(value)} modal1Visible={Modal1Visible} setModal1Visible={(value)=>setModal1Visible(value)}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CardCitas"]},"metadata":{},"sourceType":"module"}