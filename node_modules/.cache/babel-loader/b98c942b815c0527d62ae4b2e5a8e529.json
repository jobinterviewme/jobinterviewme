{"ast":null,"code":"import _toConsumableArray from \"C:/Users/ighil/Documents/ReactProyects/JobInterViewMe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:/Users/ighil/Documents/ReactProyects/JobInterViewMe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ighil\\\\Documents\\\\ReactProyects\\\\JobInterViewMe\\\\src\\\\views\\\\FormPreparador\\\\Presentacion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport { ErrorMessage, Formik, Field } from \"formik\";\nimport { FileUpload } from 'primereact/fileupload';\nimport * as yup from \"yup\";\nimport { Button } from 'primereact/button';\nimport { AutoComplete } from 'primereact/autocomplete';\nimport sectorJSON from '../../assets/json/sectores.json';\nimport idiomasJSON from '../../assets/json/idiomas.json';\nimport { InputText } from \"primereact/inputtext\";\nimport Form from \"antd/lib/form/Form\";\nimport { Col, Row } from \"antd\";\n\nvar Presentacion = function Presentacion(props) {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      sectores = _useState2[0],\n      setSectores = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      idiomas = _useState4[0],\n      setIdiomas = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nombreImagen = _useState6[0],\n      setNombreImagen = _useState6[1];\n\n  var _useState7 = useState(props.valores.nombrePerfil),\n      _useState8 = _slicedToArray(_useState7, 2),\n      nombrePerfil = _useState8[0],\n      setNombrePerfil = _useState8[1];\n\n  var _useState9 = useState(props.valores.imgPefil !== \"\" ? props.valores.imgPefil : null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      imgPefil = _useState10[0],\n      setImgPerfil = _useState10[1];\n\n  var _useState11 = useState(props.valores.sectores !== \"\" ? props.valores.sectores : null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectedSectores = _useState12[0],\n      setSelectedSectores = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      filteredSectores = _useState14[0],\n      setFilteredSectores = _useState14[1];\n\n  var _useState15 = useState(props.valores.idiomas !== \"\" ? props.valores.idiomas : null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      selectedIdiomas = _useState16[0],\n      setSelectedIdiomas = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      filteredIdiomas = _useState18[0],\n      setFilteredIdiomas = _useState18[1];\n\n  useEffect(function () {\n    setSectores(sectorJSON.sectores);\n    setIdiomas(idiomasJSON.idiomas);\n  }, []);\n  useEffect(function () {\n    setValoresInicioales(props.valores);\n  }, [props.valores]);\n\n  var searchSector = function searchSector(event) {\n    setTimeout(function () {\n      var _filteredSectores;\n\n      if (!event.query.trim().length) {\n        _filteredSectores = _toConsumableArray(sectores);\n      } else {\n        _filteredSectores = sectores.filter(function (sector) {\n          return sector.name.toLowerCase().startsWith(event.query.toLowerCase());\n        });\n      }\n\n      setFilteredSectores(_filteredSectores);\n    }, 250);\n  };\n\n  var searchIdioma = function searchIdioma(event) {\n    setTimeout(function () {\n      var _filteredIdioma;\n\n      if (!event.query.trim().length) {\n        _filteredIdioma = _toConsumableArray(idiomas);\n      } else {\n        _filteredIdioma = idiomas.filter(function (idiom) {\n          return idiom.nombre.toLowerCase().startsWith(event.query.toLowerCase());\n        });\n      }\n\n      setFilteredIdiomas(_filteredIdioma);\n    }, 250);\n  };\n\n  var _useState19 = useState(props.valores),\n      _useState20 = _slicedToArray(_useState19, 2),\n      valoresIniciales = _useState20[0],\n      setValoresInicioales = _useState20[1];\n\n  var handleSubmit = function handleSubmit(values, _ref) {\n    var setFieldError = _ref.setFieldError,\n        setSubmitting = _ref.setSubmitting;\n    var bandera = true;\n\n    if (imgPefil === null) {\n      setFieldError(\"imagenperfil\", \"Imagen de perfil requerida.\");\n      bandera = false;\n    }\n\n    if (selectedSectores === null || selectedSectores === []) {\n      setFieldError(\"sectores\", \"Sectores requeridos.\");\n      bandera = false;\n    }\n\n    if (selectedIdiomas === null || selectedIdiomas === []) {\n      setFieldError(\"idiomas\", \"Idiomas requeridos.\");\n      bandera = false;\n    }\n\n    if (bandera) {\n      values.nombrePerfil = nombrePerfil;\n      values.imagenperfil = imgPefil;\n      values.sectores = selectedSectores;\n      values.idiomas = selectedIdiomas;\n      props.primerosValores(values);\n      props.goToStep(3);\n    } else {\n      setSubmitting(false);\n    }\n  };\n\n  var listaSectores = function listaSectores() {\n    var respuesta = selectedSectores[0].name;\n    selectedSectores.map(function (sector, index) {\n      if (index > 0) {\n        respuesta = respuesta + \",\" + sector.name;\n      }\n    });\n    return respuesta;\n  };\n\n  var listaIdiomas = function listaIdiomas() {\n    var respuesta = selectedIdiomas[0].codigo;\n    selectedIdiomas.map(function (idioma, index) {\n      if (index > 0) {\n        respuesta = respuesta + \",\" + idioma.codigo;\n      }\n    });\n    return respuesta;\n  };\n\n  var onChangeImg = function onChangeImg(e) {\n    var file = e.target.files[0];\n\n    if (file) {\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = function () {\n        var base64 = reader.result;\n        var s = base64.split(\",\"); //valoresIniciales.imagenperfil=e.target\n\n        setImgPerfil(s[1]); //setNombrePerfil(e.name)\n        //setImagen(s[1])\n        //setImagenX(s[1])\n      };\n    }\n  };\n\n  var goStep2 = function goStep2() {\n    //props.goToStep(2)\n    console.log(valoresIniciales);\n  };\n\n  var invoiceUploadHandler = function invoiceUploadHandler(e) {\n    console.log(e);\n    /*const [file] = files;\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = (e) => {\r\n        uploadInvoice(e.target.result);\r\n    };\r\n    fileReader.readAsDataURL(file);*/\n  };\n\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: valoresIniciales,\n    onSubmit: handleSubmit,\n    validationSchema: validationSchema,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, function (_ref2) {\n    var values = _ref2.values,\n        errors = _ref2.errors,\n        handleSubmit = _ref2.handleSubmit;\n    return /*#__PURE__*/React.createElement(Form, {\n      layout: \"vertical\",\n      className: \"register-form\",\n      name: \"formPresent\",\n      onFinish: handleSubmit,\n      autoComplete: \"off\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      className: \"OfertaCol1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" p-col-12\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"p-float-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(InputText, {\n      id: \"in\",\n      value: nombrePerfil,\n      onChange: function onChange(e) {\n        setNombrePerfil(e.target.value);\n      },\n      name: \"nombrePerfil\",\n      className: \"p-invalid\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"in\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 41\n      }\n    }, \"Nombre de tu perfil\"))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"nombrePerfil\",\n      className: \"invalid-feedback\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 38\n      }\n    }, function (message) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 115\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        className: \"p-error p-d-block\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 120\n        }\n      }, message));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \" p-col-12\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"annosExperiencia\",\n      className: \"text textMarca\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 33\n      }\n    }, \"A\\xF1os de experiencia en RRHH\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      id: \"annosExperiencia\",\n      name: \"annosExperiencia\",\n      type: \"number\",\n      className: \"with100\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"annosExperiencia\",\n      className: \"invalid-feedback\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 38\n      }\n    }, function (message) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 119\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        className: \"p-error\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 124\n        }\n      }, message));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-col-12\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"experiencia\",\n      className: \"text textMarca\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 33\n      }\n    }, \"Tu experiencia (m\\xE1x. 40 caracteres)\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"textarea\",\n      id: \"experiencia\",\n      name: \"experiencia\",\n      \"aria-describedby\": \"username2-help\",\n      className: \"with100 height80px p-invalid p-d-block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"experiencia\",\n      className: \"invalid-feedback\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 38\n      }\n    }, function (message) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 114\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        className: \"p-error\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 119\n        }\n      }, message));\n    })))), /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      className: \"OfertaCol1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" p-col-12\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"imagenperfil\",\n      className: \"text textMarca\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 33\n      }\n    }, \"Imagen de perfil\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      id: \"imagenperfilt\",\n      name: \"imagenperfilt\",\n      onChange: function onChange(e) {\n        onChangeImg(e);\n      },\n      type: \"file\",\n      className: \"with100\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"imagenperfil\",\n      className: \"invalid-feedback\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 38\n      }\n    }, function (message) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 115\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        className: \"p-error\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 120\n        }\n      }, message));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \" p-col-12\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"sectores\",\n      className: \"text textMarca\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 33\n      }\n    }, \"Sectores\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"p-fluid\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(AutoComplete, {\n      value: selectedSectores,\n      suggestions: filteredSectores,\n      completeMethod: searchSector,\n      field: \"name\",\n      multiple: true,\n      onChange: function onChange(e) {\n        return setSelectedSectores(e.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"sectores\",\n      className: \"invalid-feedback\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 38\n      }\n    }, function (message) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 111\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        className: \"p-error\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 116\n        }\n      }, message));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-col-12\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"perfiles\",\n      className: \"text textMarca\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 33\n      }\n    }, \"Perfiles\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      id: \"perfiles\",\n      name: \"perfiles\",\n      type: \"text\",\n      className: \"with100\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"perfiles\",\n      className: \"invalid-feedback\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 38\n      }\n    }, function (message) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 111\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        className: \"p-error\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 116\n        }\n      }, message));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-col-12\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"idiomas\",\n      className: \"text textMarca\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 33\n      }\n    }, \"Idiomas\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"p-fluid\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(AutoComplete, {\n      value: selectedIdiomas,\n      suggestions: filteredIdiomas,\n      completeMethod: searchIdioma,\n      field: \"nombre\",\n      multiple: true,\n      onChange: function onChange(e) {\n        return setSelectedIdiomas(e.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"idiomas\",\n      className: \"invalid-feedback\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 38\n      }\n    }, function (message) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 110\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        className: \"p-error\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 115\n        }\n      }, message));\n    }))))), /*#__PURE__*/React.createElement(GridContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-field p-col p-md-6 p-col-12\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      label: \"Anterior\",\n      type: \"button\",\n      onClick: function onClick() {\n        props.goToStep(1);\n      },\n      icon: \"pi pi-times\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-field p-col p-md-6 p-col-12\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      label: \"Siguiente\",\n      type: \"submit\",\n      icon: \"pi pi-check\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 37\n      }\n    }))))));\n  });\n};\n\n_s(Presentacion, \"iP5lpo6eualjFAFclfhyLTzB/50=\");\n\n_c = Presentacion;\nexport default Presentacion;\nvar validationSchema = yup.object().shape({// nombrePerfil: yup.string().required(\"Nombre de perfil requerido.\"),\n  //annosExperiencia: yup.string().required(\"Años de experiencia requerido.\"),\n  //experiencia: yup.string().required(\"Experiencia requerido.\"),\n  //perfiles: yup.string().required(\"Perfiles requerido.\")\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"Presentacion\");","map":{"version":3,"sources":["C:/Users/ighil/Documents/ReactProyects/JobInterViewMe/src/views/FormPreparador/Presentacion.js"],"names":["React","useEffect","useState","GridContainer","GridItem","ErrorMessage","Formik","Field","FileUpload","yup","Button","AutoComplete","sectorJSON","idiomasJSON","InputText","Form","Col","Row","Presentacion","props","sectores","setSectores","idiomas","setIdiomas","nombreImagen","setNombreImagen","valores","nombrePerfil","setNombrePerfil","imgPefil","setImgPerfil","selectedSectores","setSelectedSectores","filteredSectores","setFilteredSectores","selectedIdiomas","setSelectedIdiomas","filteredIdiomas","setFilteredIdiomas","setValoresInicioales","searchSector","event","setTimeout","_filteredSectores","query","trim","length","filter","sector","name","toLowerCase","startsWith","searchIdioma","_filteredIdioma","idiom","nombre","valoresIniciales","handleSubmit","values","setFieldError","setSubmitting","bandera","imagenperfil","primerosValores","goToStep","listaSectores","respuesta","map","index","listaIdiomas","codigo","idioma","onChangeImg","e","file","target","files","reader","FileReader","readAsDataURL","onload","base64","result","s","split","goStep2","console","log","invoiceUploadHandler","validationSchema","errors","value","message","object","shape"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport { ErrorMessage, Formik, Field } from \"formik\";\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport * as yup from \"yup\";\r\nimport { Button } from 'primereact/button';\r\nimport { AutoComplete } from 'primereact/autocomplete';\r\nimport sectorJSON from '../../assets/json/sectores.json';\r\nimport idiomasJSON from '../../assets/json/idiomas.json';\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport Form from \"antd/lib/form/Form\";\r\nimport { Col, Row } from \"antd\";\r\n\r\nconst Presentacion = (props) => {\r\n    const [sectores, setSectores] = useState([]);\r\n    const [idiomas, setIdiomas] = useState(null)\r\n    const [nombreImagen, setNombreImagen] = useState(\"\")\r\n    const [nombrePerfil, setNombrePerfil] = useState(props.valores.nombrePerfil)\r\n    const [imgPefil, setImgPerfil] = useState(props.valores.imgPefil !== \"\" ? props.valores.imgPefil : null)\r\n    const [selectedSectores, setSelectedSectores] = useState(props.valores.sectores !== \"\" ? props.valores.sectores : null);\r\n    const [filteredSectores, setFilteredSectores] = useState(null);\r\n    const [selectedIdiomas, setSelectedIdiomas] = useState(props.valores.idiomas !== \"\" ? props.valores.idiomas : null);\r\n    const [filteredIdiomas, setFilteredIdiomas] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setSectores(sectorJSON.sectores);\r\n        setIdiomas(idiomasJSON.idiomas)\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        setValoresInicioales(props.valores)\r\n    }, [props.valores]);\r\n\r\n    const searchSector = (event) => {\r\n        setTimeout(() => {\r\n            let _filteredSectores;\r\n            if (!event.query.trim().length) {\r\n                _filteredSectores = [...sectores];\r\n            }\r\n            else {\r\n                _filteredSectores = sectores.filter((sector) => {\r\n                    return sector.name.toLowerCase().startsWith(event.query.toLowerCase());\r\n                });\r\n            }\r\n            setFilteredSectores(_filteredSectores);\r\n        }, 250);\r\n    }\r\n\r\n    const searchIdioma = (event) => {\r\n        setTimeout(() => {\r\n            let _filteredIdioma;\r\n            if (!event.query.trim().length) {\r\n                _filteredIdioma = [...idiomas];\r\n            }\r\n            else {\r\n                _filteredIdioma = idiomas.filter((idiom) => {\r\n                    return idiom.nombre.toLowerCase().startsWith(event.query.toLowerCase());\r\n                });\r\n            }\r\n            setFilteredIdiomas(_filteredIdioma);\r\n        }, 250);\r\n    }\r\n\r\n\r\n    const [valoresIniciales, setValoresInicioales] = useState(props.valores)\r\n    const handleSubmit = (values, { setFieldError, setSubmitting }) => {\r\n        let bandera = true\r\n        if (imgPefil === null) {\r\n            setFieldError(\"imagenperfil\", \"Imagen de perfil requerida.\")\r\n            bandera = false\r\n        }\r\n        if (selectedSectores === null || selectedSectores === []) {\r\n            setFieldError(\"sectores\", \"Sectores requeridos.\")\r\n            bandera = false\r\n        }\r\n        if (selectedIdiomas === null || selectedIdiomas === []) {\r\n            setFieldError(\"idiomas\", \"Idiomas requeridos.\")\r\n            bandera = false\r\n        }\r\n        if (bandera) {\r\n            values.nombrePerfil = nombrePerfil\r\n            values.imagenperfil = imgPefil\r\n            values.sectores = selectedSectores\r\n            values.idiomas = selectedIdiomas\r\n            props.primerosValores(values)\r\n            props.goToStep(3);\r\n        } else {\r\n            setSubmitting(false);\r\n        }\r\n    }\r\n\r\n    const listaSectores = () => {\r\n        let respuesta = selectedSectores[0].name\r\n        selectedSectores.map((sector, index) => {\r\n            if (index > 0) {\r\n                respuesta = respuesta + \",\" + sector.name\r\n            }\r\n        })\r\n        return respuesta\r\n    }\r\n    const listaIdiomas = () => {\r\n        let respuesta = selectedIdiomas[0].codigo\r\n        selectedIdiomas.map((idioma, index) => {\r\n            if (index > 0) {\r\n                respuesta = respuesta + \",\" + idioma.codigo\r\n            }\r\n        })\r\n        return respuesta\r\n    }\r\n    const onChangeImg = (e) => {\r\n        let file = e.target.files[0]\r\n        if (file) {\r\n            const reader = new FileReader()\r\n            reader.readAsDataURL(file)\r\n            reader.onload = function () {\r\n                var base64 = reader.result\r\n                var s = base64.split(\",\")\r\n                //valoresIniciales.imagenperfil=e.target\r\n                setImgPerfil(s[1])\r\n                //setNombrePerfil(e.name)\r\n                //setImagen(s[1])\r\n                //setImagenX(s[1])\r\n            }\r\n        }\r\n    }\r\n    const goStep2 = () => {\r\n        //props.goToStep(2)\r\n        console.log(valoresIniciales)\r\n    }\r\n    const invoiceUploadHandler = (e) => {\r\n        console.log(e)\r\n        /*const [file] = files;\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = (e) => {\r\n            uploadInvoice(e.target.result);\r\n        };\r\n        fileReader.readAsDataURL(file);*/\r\n    };\r\n    return (\r\n\r\n\r\n        <Formik initialValues={valoresIniciales} onSubmit={handleSubmit} validationSchema={validationSchema}>\r\n            {({ values, errors, handleSubmit }) => (\r\n                <Form layout=\"vertical\" className=\"register-form\" name=\"formPresent\" onFinish={handleSubmit} autoComplete=\"off\">\r\n                    <Row className=\"\">\r\n                        <Col span={12} className=\"OfertaCol1\">\r\n\r\n                            <div className=\" p-col-12\">\r\n                                <div>\r\n                                    <span className=\"p-float-label\">\r\n                                        <InputText id=\"in\" value={nombrePerfil} onChange={(e) => { setNombrePerfil(e.target.value) }} name=\"nombrePerfil\" className=\"p-invalid\" />\r\n                                        <label htmlFor=\"in\">Nombre de tu perfil</label>\r\n                                    </span>\r\n                                </div>\r\n                                <div><ErrorMessage name={\"nombrePerfil\"} className=\"invalid-feedback\">{message => <div><small className=\"p-error p-d-block\">{message}</small></div>}</ErrorMessage></div>\r\n                            </div>\r\n                            <div className=\" p-col-12\">\r\n                                <label htmlFor={\"annosExperiencia\"} className=\"text textMarca\">Años de experiencia en RRHH</label>\r\n                                <div>\r\n                                    <Field id=\"annosExperiencia\" name=\"annosExperiencia\" type=\"number\" className=\"with100\" />\r\n                                </div>\r\n                                <div><ErrorMessage name={\"annosExperiencia\"} className=\"invalid-feedback\">{message => <div><small className=\"p-error\">{message}</small></div>}</ErrorMessage></div>\r\n                            </div>\r\n                            <div className=\"p-col-12\">\r\n                                <label htmlFor={\"experiencia\"} className=\"text textMarca\">Tu experiencia (máx. 40 caracteres)</label>\r\n                                <div>\r\n                                    <Field type=\"textarea\" id=\"experiencia\" name=\"experiencia\" aria-describedby=\"username2-help\" className=\"with100 height80px p-invalid p-d-block\" />\r\n                                </div>\r\n                                <div><ErrorMessage name={\"experiencia\"} className=\"invalid-feedback\">{message => <div><small className=\"p-error\">{message}</small></div>}</ErrorMessage></div>\r\n                            </div>\r\n                        </Col>\r\n\r\n                        <Col span={12} className=\"OfertaCol1\">\r\n\r\n                            <div className=\" p-col-12\">\r\n                                <label htmlFor={\"imagenperfil\"} className=\"text textMarca\">Imagen de perfil</label>\r\n                                <div>\r\n                                    <Field id=\"imagenperfilt\" name=\"imagenperfilt\" onChange={(e) => { onChangeImg(e) }} type=\"file\" className=\"with100\" />\r\n                                </div>\r\n                                <div><ErrorMessage name={\"imagenperfil\"} className=\"invalid-feedback\">{message => <div><small className=\"p-error\">{message}</small></div>}</ErrorMessage></div>\r\n                            </div>\r\n\r\n                            <div className=\" p-col-12\">\r\n                                <label htmlFor={\"sectores\"} className=\"text textMarca\">Sectores</label>\r\n                                <span className=\"p-fluid\">\r\n                                    <AutoComplete value={selectedSectores} suggestions={filteredSectores} completeMethod={searchSector} field=\"name\" multiple onChange={(e) => setSelectedSectores(e.value)} />\r\n                                </span>\r\n\r\n                                <div><ErrorMessage name={\"sectores\"} className=\"invalid-feedback\">{message => <div><small className=\"p-error\">{message}</small></div>}</ErrorMessage></div>\r\n                            </div>\r\n\r\n                            <div className=\"p-col-12\">\r\n                                <label htmlFor={\"perfiles\"} className=\"text textMarca\">Perfiles</label>\r\n                                <div>\r\n                                    <Field id=\"perfiles\" name=\"perfiles\" type=\"text\" className=\"with100\" />\r\n                                </div>\r\n                                <div><ErrorMessage name={\"perfiles\"} className=\"invalid-feedback\">{message => <div><small className=\"p-error\">{message}</small></div>}</ErrorMessage></div>\r\n                            </div>\r\n\r\n                            <div className=\"p-col-12\">\r\n                                <label htmlFor={\"idiomas\"} className=\"text textMarca\">Idiomas</label>\r\n                                <span className=\"p-fluid\">\r\n                                    <AutoComplete value={selectedIdiomas} suggestions={filteredIdiomas} completeMethod={searchIdioma} field=\"nombre\" multiple onChange={(e) => setSelectedIdiomas(e.value)} />\r\n                                </span>\r\n                                <div><ErrorMessage name={\"idiomas\"} className=\"invalid-feedback\">{message => <div><small className=\"p-error\">{message}</small></div>}</ErrorMessage></div>\r\n                            </div>\r\n\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <GridContainer>\r\n                        <GridItem xs={12} sm={12} md={2}>\r\n                            <div className=\"p-field p-col p-md-6 p-col-12\" >\r\n                                <div className={\"center\"} >\r\n                                    <Button label=\"Anterior\" type=\"button\" onClick={() => { props.goToStep(1) }} icon=\"pi pi-times\" />\r\n                                </div>\r\n                            </div>\r\n                        </GridItem>\r\n                        <GridItem xs={12} sm={12} md={2}>\r\n                            <div className=\"p-field p-col p-md-6 p-col-12\" >\r\n                                <div className={\"center\"} >\r\n                                    <Button label=\"Siguiente\" type=\"submit\" icon=\"pi pi-check\" />\r\n                                </div>\r\n                            </div>\r\n                        </GridItem>\r\n                    </GridContainer>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n\r\n    )\r\n};\r\nexport default Presentacion;\r\n\r\nconst validationSchema = yup.object().shape({\r\n    // nombrePerfil: yup.string().required(\"Nombre de perfil requerido.\"),\r\n    //annosExperiencia: yup.string().required(\"Años de experiencia requerido.\"),\r\n    //experiencia: yup.string().required(\"Experiencia requerido.\"),\r\n    //perfiles: yup.string().required(\"Perfiles requerido.\")\r\n});"]},"metadata":{},"sourceType":"module"}