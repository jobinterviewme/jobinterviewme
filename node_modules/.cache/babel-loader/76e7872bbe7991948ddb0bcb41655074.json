{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ighil/Documents/ReactProyects/JobInterViewMe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/ighil/Documents/ReactProyects/JobInterViewMe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"C:/Users/ighil/Documents/ReactProyects/JobInterViewMe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:/Users/ighil/Documents/ReactProyects/JobInterViewMe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ighil\\\\Documents\\\\ReactProyects\\\\JobInterViewMe\\\\src\\\\views\\\\FormPreparador\\\\Presentacion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport { ErrorMessage, Formik, Field } from \"formik\";\nimport { FileUpload } from 'primereact/fileupload';\nimport * as yup from \"yup\";\nimport { Button } from 'primereact/button';\nimport { AutoComplete } from 'primereact/autocomplete';\nimport sectorJSON from '../../assets/json/sectores.json';\nimport idiomasJSON from '../../assets/json/idiomas.json';\nimport { InputText } from \"primereact/inputtext\";\nimport { Form, Input, Upload, Space, Select, TimePicker, Row, Col, Tag, InputNumber } from 'antd';\nimport ImgCrop from 'antd-img-crop';\n\nvar Presentacion = function Presentacion(props) {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      sectores = _useState2[0],\n      setSectores = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      idiomas = _useState4[0],\n      setIdiomas = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nombreImagen = _useState6[0],\n      setNombreImagen = _useState6[1];\n\n  var _useState7 = useState(props.valores.nombrePerfil),\n      _useState8 = _slicedToArray(_useState7, 2),\n      nombrePerfil = _useState8[0],\n      setNombrePerfil = _useState8[1];\n\n  var _useState9 = useState(props.valores.imgPefil !== \"\" ? props.valores.imgPefil : null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      imgPefil = _useState10[0],\n      setImgPerfil = _useState10[1];\n\n  var _useState11 = useState(props.valores.sectores !== \"\" ? props.valores.sectores : null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectedSectores = _useState12[0],\n      setSelectedSectores = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      filteredSectores = _useState14[0],\n      setFilteredSectores = _useState14[1];\n\n  var _useState15 = useState(props.valores.idiomas !== \"\" ? props.valores.idiomas : null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      selectedIdiomas = _useState16[0],\n      setSelectedIdiomas = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      filteredIdiomas = _useState18[0],\n      setFilteredIdiomas = _useState18[1];\n\n  useEffect(function () {\n    setSectores(sectorJSON.sectores);\n    setIdiomas(idiomasJSON.idiomas);\n  }, []);\n  useEffect(function () {\n    setValoresInicioales(props.valores);\n  }, [props.valores]);\n\n  var searchSector = function searchSector(event) {\n    setTimeout(function () {\n      var _filteredSectores;\n\n      if (!event.query.trim().length) {\n        _filteredSectores = _toConsumableArray(sectores);\n      } else {\n        _filteredSectores = sectores.filter(function (sector) {\n          return sector.name.toLowerCase().startsWith(event.query.toLowerCase());\n        });\n      }\n\n      setFilteredSectores(_filteredSectores);\n    }, 250);\n  };\n\n  var searchIdioma = function searchIdioma(event) {\n    setTimeout(function () {\n      var _filteredIdioma;\n\n      if (!event.query.trim().length) {\n        _filteredIdioma = _toConsumableArray(idiomas);\n      } else {\n        _filteredIdioma = idiomas.filter(function (idiom) {\n          return idiom.nombre.toLowerCase().startsWith(event.query.toLowerCase());\n        });\n      }\n\n      setFilteredIdiomas(_filteredIdioma);\n    }, 250);\n  };\n\n  var _useState19 = useState(props.valores),\n      _useState20 = _slicedToArray(_useState19, 2),\n      valoresIniciales = _useState20[0],\n      setValoresInicioales = _useState20[1];\n\n  var handleSubmit = function handleSubmit(values, _ref) {\n    var setFieldError = _ref.setFieldError,\n        setSubmitting = _ref.setSubmitting;\n    var bandera = true;\n\n    if (imgPefil === null) {\n      setFieldError(\"imagenperfil\", \"Imagen de perfil requerida.\");\n      bandera = false;\n    }\n\n    if (selectedSectores === null || selectedSectores === []) {\n      setFieldError(\"sectores\", \"Sectores requeridos.\");\n      bandera = false;\n    }\n\n    if (selectedIdiomas === null || selectedIdiomas === []) {\n      setFieldError(\"idiomas\", \"Idiomas requeridos.\");\n      bandera = false;\n    }\n\n    if (bandera) {\n      values.nombrePerfil = nombrePerfil;\n      values.imagenperfil = imgPefil;\n      values.sectores = selectedSectores;\n      values.idiomas = selectedIdiomas;\n      props.primerosValores(values);\n      props.goToStep(3);\n    } else {\n      setSubmitting(false);\n    }\n  };\n\n  var listaSectores = function listaSectores() {\n    var respuesta = selectedSectores[0].name;\n    selectedSectores.map(function (sector, index) {\n      if (index > 0) {\n        respuesta = respuesta + \",\" + sector.name;\n      }\n    });\n    return respuesta;\n  };\n\n  var listaIdiomas = function listaIdiomas() {\n    var respuesta = selectedIdiomas[0].codigo;\n    selectedIdiomas.map(function (idioma, index) {\n      if (index > 0) {\n        respuesta = respuesta + \",\" + idioma.codigo;\n      }\n    });\n    return respuesta;\n  };\n\n  var onChangeImg = function onChangeImg(e) {\n    var file = e.target.files[0];\n\n    if (file) {\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = function () {\n        var base64 = reader.result;\n        var s = base64.split(\",\"); //valoresIniciales.imagenperfil=e.target\n\n        setImgPerfil(s[1]); //setNombrePerfil(e.name)\n        //setImagen(s[1])\n        //setImagenX(s[1])\n      };\n    }\n  };\n\n  var goStep2 = function goStep2() {\n    //props.goToStep(2)\n    console.log(valoresIniciales);\n  };\n\n  var invoiceUploadHandler = function invoiceUploadHandler(e) {\n    console.log(e);\n    /*const [file] = files;\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = (e) => {\r\n        uploadInvoice(e.target.result);\r\n    };\r\n    fileReader.readAsDataURL(file);*/\n  };\n\n  var onPreview = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(file) {\n      var src, image, imgWindow;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              src = file.url;\n\n              if (src) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 4;\n              return new Promise(function (resolve) {\n                var reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n\n                reader.onload = function () {\n                  return resolve(reader.result);\n                };\n              });\n\n            case 4:\n              src = _context.sent;\n\n            case 5:\n              image = new Image();\n              image.src = src;\n              imgWindow = window.open(src);\n              imgWindow.document.write(image.outerHTML);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onPreview(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onChange = function onChange(_ref3) {\n    var newFileList = _ref3.fileList;\n    setFileList(newFileList);\n    setImgPerfil(newFileList);\n  };\n\n  var _useState21 = useState([]\n  /*[\r\n  {\r\n  uid: '-1',\r\n  name: 'image.png',\r\n  status: 'done',\r\n  url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n  },\r\n  ]*/\n  ),\n      _useState22 = _slicedToArray(_useState21, 2),\n      fileList = _useState22[0],\n      setFileList = _useState22[1];\n\n  return /*#__PURE__*/React.createElement(Form, {\n    layout: \"vertical\",\n    className: \"register-form\",\n    name: \"formPresent\",\n    onFinish: handleSubmit,\n    autoComplete: \"off\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"OfertaFrom\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    className: \"OfertaCol1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Nombre de tu perfil\",\n    name: \"tipoPreparaci\\xF3n\",\n    rules: [{\n      required: nombrePerfil === \"\" ? true : false,\n      message: 'Por favor introduzca el nombre de su perfil'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    defaultValue: nombrePerfil,\n    id: \"in\",\n    value: nombrePerfil,\n    placeholder: \"Nombre de tu perfil\",\n    onChange: function onChange(e) {\n      setNombrePerfil(e.target.value);\n    },\n    name: \"nombrePerfil\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Nombre de tu perfil\",\n    name: \"tipoPreparaci\\xF3n\",\n    rules: [{\n      required: nombrePerfil === \"\" ? true : false,\n      message: 'Por favor introduzca el nombre de su perfil'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ImgCrop, {\n    rotate: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Upload, {\n    fileList: fileList,\n    onChange: onChange,\n    onPreview: onPreview,\n    listType: \"picture-card\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 29\n    }\n  }, fileList.length < 1 && '+ Adiciona tu imagen de perfil'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \" p-col-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"annosExperiencia\",\n    className: \"text textMarca\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }\n  }, \"A\\xF1os de experiencia en RRHH\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"annosExperiencia\",\n    name: \"annosExperiencia\",\n    type: \"number\",\n    className: \"with100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-col-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"experiencia\",\n    className: \"text textMarca\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 25\n    }\n  }, \"Tu experiencia (m\\xE1x. 40 caracteres)\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    id: \"experiencia\",\n    name: \"experiencia\",\n    \"aria-describedby\": \"username2-help\",\n    className: \"with100 height80px p-invalid p-d-block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    className: \"OfertaCol1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \" p-col-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"imagenperfil\",\n    className: \"text textMarca\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 25\n    }\n  }, \"Imagen de perfil\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"imagenperfilt\",\n    name: \"imagenperfilt\",\n    onChange: function onChange(e) {\n      onChangeImg(e);\n    },\n    type: \"file\",\n    className: \"with100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \" p-col-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"sectores\",\n    className: \"text textMarca\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 25\n    }\n  }, \"Sectores\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"p-fluid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(AutoComplete, {\n    value: selectedSectores,\n    suggestions: filteredSectores,\n    completeMethod: searchSector,\n    field: \"name\",\n    multiple: true,\n    onChange: function onChange(e) {\n      return setSelectedSectores(e.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-col-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"perfiles\",\n    className: \"text textMarca\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 25\n    }\n  }, \"Perfiles\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"perfiles\",\n    name: \"perfiles\",\n    type: \"text\",\n    className: \"with100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-col-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"idiomas\",\n    className: \"text textMarca\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 25\n    }\n  }, \"Idiomas\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"p-fluid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(AutoComplete, {\n    value: selectedIdiomas,\n    suggestions: filteredIdiomas,\n    completeMethod: searchIdioma,\n    field: \"nombre\",\n    multiple: true,\n    onChange: function onChange(e) {\n      return setSelectedIdiomas(e.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(GridContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-field p-col p-md-6 p-col-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    label: \"Anterior\",\n    type: \"button\",\n    onClick: function onClick() {\n      props.goToStep(1);\n    },\n    icon: \"pi pi-times\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-field p-col p-md-6 p-col-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    label: \"Siguiente\",\n    type: \"submit\",\n    icon: \"pi pi-check\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 29\n    }\n  }))))));\n};\n\n_s(Presentacion, \"g4h5GAwr3h5CCeCKQF8J/a2oQvE=\");\n\n_c = Presentacion;\nexport default Presentacion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Presentacion\");","map":{"version":3,"sources":["C:/Users/ighil/Documents/ReactProyects/JobInterViewMe/src/views/FormPreparador/Presentacion.js"],"names":["React","useEffect","useState","GridContainer","GridItem","ErrorMessage","Formik","Field","FileUpload","yup","Button","AutoComplete","sectorJSON","idiomasJSON","InputText","Form","Input","Upload","Space","Select","TimePicker","Row","Col","Tag","InputNumber","ImgCrop","Presentacion","props","sectores","setSectores","idiomas","setIdiomas","nombreImagen","setNombreImagen","valores","nombrePerfil","setNombrePerfil","imgPefil","setImgPerfil","selectedSectores","setSelectedSectores","filteredSectores","setFilteredSectores","selectedIdiomas","setSelectedIdiomas","filteredIdiomas","setFilteredIdiomas","setValoresInicioales","searchSector","event","setTimeout","_filteredSectores","query","trim","length","filter","sector","name","toLowerCase","startsWith","searchIdioma","_filteredIdioma","idiom","nombre","valoresIniciales","handleSubmit","values","setFieldError","setSubmitting","bandera","imagenperfil","primerosValores","goToStep","listaSectores","respuesta","map","index","listaIdiomas","codigo","idioma","onChangeImg","e","file","target","files","reader","FileReader","readAsDataURL","onload","base64","result","s","split","goStep2","console","log","invoiceUploadHandler","onPreview","src","url","Promise","resolve","originFileObj","image","Image","imgWindow","window","open","document","write","outerHTML","onChange","newFileList","fileList","setFileList","required","message","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport { ErrorMessage, Formik, Field } from \"formik\";\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport * as yup from \"yup\";\r\nimport { Button } from 'primereact/button';\r\nimport { AutoComplete } from 'primereact/autocomplete';\r\nimport sectorJSON from '../../assets/json/sectores.json';\r\nimport idiomasJSON from '../../assets/json/idiomas.json';\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Form, Input, Upload, Space, Select, TimePicker, Row, Col, Tag, InputNumber } from 'antd';\r\nimport ImgCrop from 'antd-img-crop';\r\n\r\nconst Presentacion = (props) => {\r\n    const [sectores, setSectores] = useState([]);\r\n    const [idiomas, setIdiomas] = useState(null)\r\n    const [nombreImagen, setNombreImagen] = useState(\"\")\r\n    const [nombrePerfil, setNombrePerfil] = useState(props.valores.nombrePerfil)\r\n    const [imgPefil, setImgPerfil] = useState(props.valores.imgPefil !== \"\" ? props.valores.imgPefil : null)\r\n    const [selectedSectores, setSelectedSectores] = useState(props.valores.sectores !== \"\" ? props.valores.sectores : null);\r\n    const [filteredSectores, setFilteredSectores] = useState(null);\r\n    const [selectedIdiomas, setSelectedIdiomas] = useState(props.valores.idiomas !== \"\" ? props.valores.idiomas : null);\r\n    const [filteredIdiomas, setFilteredIdiomas] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setSectores(sectorJSON.sectores);\r\n        setIdiomas(idiomasJSON.idiomas)\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        setValoresInicioales(props.valores)\r\n    }, [props.valores]);\r\n\r\n    const searchSector = (event) => {\r\n        setTimeout(() => {\r\n            let _filteredSectores;\r\n            if (!event.query.trim().length) {\r\n                _filteredSectores = [...sectores];\r\n            }\r\n            else {\r\n                _filteredSectores = sectores.filter((sector) => {\r\n                    return sector.name.toLowerCase().startsWith(event.query.toLowerCase());\r\n                });\r\n            }\r\n            setFilteredSectores(_filteredSectores);\r\n        }, 250);\r\n    }\r\n\r\n    const searchIdioma = (event) => {\r\n        setTimeout(() => {\r\n            let _filteredIdioma;\r\n            if (!event.query.trim().length) {\r\n                _filteredIdioma = [...idiomas];\r\n            }\r\n            else {\r\n                _filteredIdioma = idiomas.filter((idiom) => {\r\n                    return idiom.nombre.toLowerCase().startsWith(event.query.toLowerCase());\r\n                });\r\n            }\r\n            setFilteredIdiomas(_filteredIdioma);\r\n        }, 250);\r\n    }\r\n\r\n\r\n    const [valoresIniciales, setValoresInicioales] = useState(props.valores)\r\n    const handleSubmit = (values, { setFieldError, setSubmitting }) => {\r\n        let bandera = true\r\n        if (imgPefil === null) {\r\n            setFieldError(\"imagenperfil\", \"Imagen de perfil requerida.\")\r\n            bandera = false\r\n        }\r\n        if (selectedSectores === null || selectedSectores === []) {\r\n            setFieldError(\"sectores\", \"Sectores requeridos.\")\r\n            bandera = false\r\n        }\r\n        if (selectedIdiomas === null || selectedIdiomas === []) {\r\n            setFieldError(\"idiomas\", \"Idiomas requeridos.\")\r\n            bandera = false\r\n        }\r\n        if (bandera) {\r\n            values.nombrePerfil = nombrePerfil\r\n            values.imagenperfil = imgPefil\r\n            values.sectores = selectedSectores\r\n            values.idiomas = selectedIdiomas\r\n            props.primerosValores(values)\r\n            props.goToStep(3);\r\n        } else {\r\n            setSubmitting(false);\r\n        }\r\n    }\r\n\r\n    const listaSectores = () => {\r\n        let respuesta = selectedSectores[0].name\r\n        selectedSectores.map((sector, index) => {\r\n            if (index > 0) {\r\n                respuesta = respuesta + \",\" + sector.name\r\n            }\r\n        })\r\n        return respuesta\r\n    }\r\n    const listaIdiomas = () => {\r\n        let respuesta = selectedIdiomas[0].codigo\r\n        selectedIdiomas.map((idioma, index) => {\r\n            if (index > 0) {\r\n                respuesta = respuesta + \",\" + idioma.codigo\r\n            }\r\n        })\r\n        return respuesta\r\n    }\r\n    const onChangeImg = (e) => {\r\n        let file = e.target.files[0]\r\n        if (file) {\r\n            const reader = new FileReader()\r\n            reader.readAsDataURL(file)\r\n            reader.onload = function () {\r\n                var base64 = reader.result\r\n                var s = base64.split(\",\")\r\n                //valoresIniciales.imagenperfil=e.target\r\n                setImgPerfil(s[1])\r\n                //setNombrePerfil(e.name)\r\n                //setImagen(s[1])\r\n                //setImagenX(s[1])\r\n            }\r\n        }\r\n    }\r\n    const goStep2 = () => {\r\n        //props.goToStep(2)\r\n        console.log(valoresIniciales)\r\n    }\r\n    const invoiceUploadHandler = (e) => {\r\n        console.log(e)\r\n        /*const [file] = files;\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = (e) => {\r\n            uploadInvoice(e.target.result);\r\n        };\r\n        fileReader.readAsDataURL(file);*/\r\n    };\r\n\r\n    const onPreview = async file => {\r\n        let src = file.url;\r\n        if (!src) {\r\n            src = await new Promise(resolve => {\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(file.originFileObj);\r\n                reader.onload = () => resolve(reader.result);\r\n            });\r\n        }\r\n        const image = new Image();\r\n        image.src = src;\r\n        const imgWindow = window.open(src);\r\n        imgWindow.document.write(image.outerHTML);\r\n    };\r\n\r\n    const onChange = ({ fileList: newFileList }) => {\r\n        setFileList(newFileList);\r\n        setImgPerfil(newFileList);\r\n\r\n    };\r\n\r\n    const [fileList, setFileList] = useState([] /*[\r\n        {\r\n          uid: '-1',\r\n          name: 'image.png',\r\n          status: 'done',\r\n          url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n        },\r\n      ]*/);\r\n\r\n    return (\r\n\r\n\r\n\r\n        <Form layout=\"vertical\" className=\"register-form\" name=\"formPresent\" onFinish={handleSubmit} autoComplete=\"off\">\r\n            <Row className=\"OfertaFrom\">\r\n                <Col span={12} className=\"OfertaCol1\">\r\n                    <Form.Item\r\n                        label=\"Nombre de tu perfil\"\r\n                        name=\"tipoPreparación\"\r\n\r\n                        rules={[{\r\n                            required: nombrePerfil === \"\" ? true : false,\r\n                            message: 'Por favor introduzca el nombre de su perfil',\r\n                        },]}\r\n                    >\r\n                        <Input\r\n                            defaultValue={nombrePerfil}\r\n                            id=\"in\"\r\n                            value={nombrePerfil}\r\n                            placeholder=\"Nombre de tu perfil\"\r\n                            onChange={(e) => { setNombrePerfil(e.target.value) }}\r\n                            name=\"nombrePerfil\"\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"Nombre de tu perfil\"\r\n                        name=\"tipoPreparación\"\r\n\r\n                        rules={[{\r\n                            required: nombrePerfil === \"\" ? true : false,\r\n                            message: 'Por favor introduzca el nombre de su perfil',\r\n                        },]}\r\n                    >\r\n                        <ImgCrop rotate>\r\n\r\n                            <Upload\r\n                                fileList={fileList}\r\n                                onChange={onChange}\r\n                                onPreview={onPreview}\r\n                                listType=\"picture-card\"\r\n\r\n                            >\r\n                                {fileList.length < 1 && '+ Adiciona tu imagen de perfil'}\r\n                            </Upload>\r\n                        </ImgCrop>\r\n                    </Form.Item>\r\n\r\n                    <div className=\" p-col-12\">\r\n                        <label htmlFor={\"annosExperiencia\"} className=\"text textMarca\">Años de experiencia en RRHH</label>\r\n                        <div>\r\n                            <Input id=\"annosExperiencia\" name=\"annosExperiencia\" type=\"number\" className=\"with100\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"p-col-12\">\r\n                        <label htmlFor={\"experiencia\"} className=\"text textMarca\">Tu experiencia (máx. 40 caracteres)</label>\r\n                        <div>\r\n                            <Input type=\"textarea\" id=\"experiencia\" name=\"experiencia\" aria-describedby=\"username2-help\" className=\"with100 height80px p-invalid p-d-block\" />\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n                <Col span={12} className=\"OfertaCol1\">\r\n\r\n                    <div className=\" p-col-12\">\r\n                        <label htmlFor={\"imagenperfil\"} className=\"text textMarca\">Imagen de perfil</label>\r\n                        <div>\r\n                            <Input id=\"imagenperfilt\" name=\"imagenperfilt\" onChange={(e) => { onChangeImg(e) }} type=\"file\" className=\"with100\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\" p-col-12\">\r\n                        <label htmlFor={\"sectores\"} className=\"text textMarca\">Sectores</label>\r\n                        <span className=\"p-fluid\">\r\n                            <AutoComplete value={selectedSectores} suggestions={filteredSectores} completeMethod={searchSector} field=\"name\" multiple onChange={(e) => setSelectedSectores(e.value)} />\r\n                        </span>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"p-col-12\">\r\n                        <label htmlFor={\"perfiles\"} className=\"text textMarca\">Perfiles</label>\r\n                        <div>\r\n                            <Input id=\"perfiles\" name=\"perfiles\" type=\"text\" className=\"with100\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"p-col-12\">\r\n                        <label htmlFor={\"idiomas\"} className=\"text textMarca\">Idiomas</label>\r\n                        <span className=\"p-fluid\">\r\n                            <AutoComplete value={selectedIdiomas} suggestions={filteredIdiomas} completeMethod={searchIdioma} field=\"nombre\" multiple onChange={(e) => setSelectedIdiomas(e.value)} />\r\n                        </span>\r\n                    </div>\r\n\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={2}>\r\n                    <div className=\"p-field p-col p-md-6 p-col-12\" >\r\n                        <div className={\"center\"} >\r\n                            <Button label=\"Anterior\" type=\"button\" onClick={() => { props.goToStep(1) }} icon=\"pi pi-times\" />\r\n                        </div>\r\n                    </div>\r\n                </GridItem>\r\n                <GridItem xs={12} sm={12} md={2}>\r\n                    <div className=\"p-field p-col p-md-6 p-col-12\" >\r\n                        <div className={\"center\"} >\r\n                            <Button label=\"Siguiente\" type=\"submit\" icon=\"pi pi-check\" />\r\n                        </div>\r\n                    </div>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </Form >\r\n\r\n\r\n    )\r\n};\r\nexport default Presentacion;\r\n\r\n"]},"metadata":{},"sourceType":"module"}