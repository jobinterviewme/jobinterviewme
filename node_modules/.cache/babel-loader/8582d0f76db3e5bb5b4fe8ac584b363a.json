{"ast":null,"code":"import _slicedToArray from \"C:/Users/ighil/Documents/ReactProyects/fdfdf/jobinterviewme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ighil\\\\Documents\\\\ReactProyects\\\\fdfdf\\\\jobinterviewme\\\\src\\\\components\\\\CardCitas\\\\CardCitasCliente.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Tooltip } from 'antd';\nimport { makeStyles, Icon } from '@material-ui/core';\nimport styles from \"../../assets/jss/material-kit-react/tooltipsStyle.js\";\nimport './CardCitas.style.scss';\nimport Button from \"components/CustomButtons/Button.js\";\nimport DialogCardCliente from 'components/DialogCard/DialogCardCliente.component.jsx';\nvar useStyles = makeStyles(styles);\n\nvar CardCitasCliente = function CardCitasCliente(props) {\n  _s();\n\n  var nombre = props.nombre,\n      toolTipsText = props.toolTipsText,\n      confirmada = props.confirmada,\n      fecha = props.fecha,\n      lugar = props.lugar;\n  var cita = props.cita;\n  var tipo = props.tipo;\n  var today = new Date();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      Modal1Visible = _useState2[0],\n      _setModal1Visible = _useState2[1];\n\n  if (tipo !== \"deshabilitado\") {\n    if (confirmada === \"true\") {\n      tipo = \"aceptado\";\n    } else {\n      if (confirmada === \"false\") {\n        tipo = \"pendiente\";\n      }\n    }\n  }\n\n  var ConfirmarCita = function ConfirmarCita(e) {\n    e.preventDefault();\n\n    _setModal1Visible(true);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick(e) {\n      return ConfirmarCita(e);\n    },\n    id: tipo,\n    className: \"cardCitas\",\n    tooltip: \"Enter your username\",\n    tooltipOptions: {\n      position: 'right'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, nombre, /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }), tipo !== \"deshabilitado\" ? /*#__PURE__*/React.createElement(\"span\", {\n    id: \"alerta\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 37\n    }\n  }, cita.confirmada === \"true\" ? \"Confirmada\" : \"Pendiente de confirmación  \") : /*#__PURE__*/React.createElement(React.Fragment, null)), /*#__PURE__*/React.createElement(DialogCardCliente, {\n    cita: cita,\n    setReload: function setReload(value) {\n      return props.setReload(value);\n    },\n    modal1Visible: Modal1Visible,\n    setModal1Visible: function setModal1Visible(value) {\n      return _setModal1Visible(value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(CardCitasCliente, \"sRL8/3KObAQB5fYA3jLq3kxngy8=\");\n\n_c = CardCitasCliente;\nexport default CardCitasCliente;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardCitasCliente\");","map":{"version":3,"sources":["C:/Users/ighil/Documents/ReactProyects/fdfdf/jobinterviewme/src/components/CardCitas/CardCitasCliente.component.jsx"],"names":["React","useState","Tooltip","makeStyles","Icon","styles","Button","DialogCardCliente","useStyles","CardCitasCliente","props","nombre","toolTipsText","confirmada","fecha","lugar","cita","tipo","today","Date","Modal1Visible","setModal1Visible","ConfirmarCita","e","preventDefault","position","value","setReload"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,OAAT,QAAwB,MAAxB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAgC,mBAAhC;AACA,OAAOC,MAAP,MAAmB,sDAAnB;AACA,OAAO,wBAAP;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,OAAOC,iBAAP,MAA8B,uDAA9B;AAEA,IAAMC,SAAS,GAAGL,UAAU,CAACE,MAAD,CAA5B;;AAEA,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAAA;;AAAA,MAE7BC,MAF6B,GAEoBD,KAFpB,CAE7BC,MAF6B;AAAA,MAErBC,YAFqB,GAEoBF,KAFpB,CAErBE,YAFqB;AAAA,MAEPC,UAFO,GAEoBH,KAFpB,CAEPG,UAFO;AAAA,MAEKC,KAFL,GAEoBJ,KAFpB,CAEKI,KAFL;AAAA,MAEYC,KAFZ,GAEoBL,KAFpB,CAEYK,KAFZ;AAGpC,MAAMC,IAAI,GAACN,KAAK,CAACM,IAAjB;AAEA,MAAIC,IAAI,GAAGP,KAAK,CAACO,IAAjB;AACA,MAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;;AANoC,kBAQMlB,QAAQ,CAAC,KAAD,CARd;AAAA;AAAA,MAQ7BmB,aAR6B;AAAA,MAQdC,iBARc;;AAUpC,MAAGJ,IAAI,KAAG,eAAV,EAA0B;AAE1B,QAAGJ,UAAU,KAAK,MAAlB,EAA4B;AACxBI,MAAAA,IAAI,GAAG,UAAP;AACH,KAFD,MAEK;AACD,UAAGJ,UAAU,KAAK,OAAlB,EAA2B;AAExBI,QAAAA,IAAI,GAAG,WAAP;AAAmB;AAEzB;AAAC;;AAED,MAAMK,aAAa,GAAC,SAAdA,aAAc,CAACC,CAAD,EAAK;AACtBA,IAAAA,CAAC,CAACC,cAAF;;AACAH,IAAAA,iBAAgB,CAAC,IAAD,CAAhB;AACF,GAHD;;AAKG,sBACI,uDACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAE,iBAAAE,CAAC;AAAA,aAAID,aAAa,CAACC,CAAD,CAAjB;AAAA,KADd;AAEI,IAAA,EAAE,EAAEN,IAFR;AAGI,IAAA,SAAS,EAAC,WAHd;AAII,IAAA,OAAO,EAAC,qBAJZ;AAIkC,IAAA,cAAc,EAAE;AAACQ,MAAAA,QAAQ,EAAE;AAAX,KAJlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOCd,MAPD,eAOQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPR,EAQCM,IAAI,KAAG,eAAP,gBAAuB;AAAM,IAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBD,IAAI,CAACH,UAAL,KAAkB,MAAlB,GAAyB,YAAzB,GAAsC,6BAAzD,CAAvB,gBACO,yCATR,CADJ,eAaI,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAEG,IAAzB;AAA+B,IAAA,SAAS,EAAE,mBAACU,KAAD;AAAA,aAAShB,KAAK,CAACiB,SAAN,CAAgBD,KAAhB,CAAT;AAAA,KAA1C;AAA2E,IAAA,aAAa,EAAEN,aAA1F;AAAyG,IAAA,gBAAgB,EAAE,0BAACM,KAAD;AAAA,aAASL,iBAAgB,CAACK,KAAD,CAAzB;AAAA,KAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CADJ;AAiBH,CA3CD;;GAAMjB,gB;;KAAAA,gB;AA6CN,eAAeA,gBAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { Tooltip } from 'antd';\r\nimport { makeStyles, Icon} from '@material-ui/core';\r\nimport styles from \"../../assets/jss/material-kit-react/tooltipsStyle.js\";\r\nimport './CardCitas.style.scss';\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport DialogCardCliente from 'components/DialogCard/DialogCardCliente.component.jsx';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst CardCitasCliente = (props) => {\r\n\r\nconst {nombre, toolTipsText, confirmada, fecha, lugar}= props;\r\nconst cita=props.cita;\r\n\r\nlet tipo = props.tipo;\r\nconst today = new Date();\r\n\r\nconst [Modal1Visible, setModal1Visible] = useState(false);\r\n\r\nif(tipo!==\"deshabilitado\"){\r\n    \r\nif(confirmada === \"true\"   ){\r\n    tipo = \"aceptado\";\r\n}else{\r\n    if(confirmada === \"false\" ){\r\n        \r\n       tipo = \"pendiente\"}\r\n        \r\n}}\r\n\r\n const ConfirmarCita=(e)=>{\r\n    e.preventDefault();\r\n    setModal1Visible(true);\r\n }\r\n\r\n    return (\r\n        <>\r\n            <Button \r\n                onClick={e => ConfirmarCita(e) }\r\n                id={tipo}\r\n                className=\"cardCitas\"  \r\n                tooltip=\"Enter your username\" tooltipOptions={{position: 'right'}}         \r\n            >\r\n\r\n            {nombre}<br/>\r\n            {tipo!==\"deshabilitado\"?<span id=\"alerta\">{cita.confirmada===\"true\"?\"Confirmada\":\"Pendiente de confirmación  \"}\r\n            </span>:<></>}\r\n            </Button>\r\n\r\n            <DialogCardCliente cita={cita} setReload={(value)=>props.setReload(value)} modal1Visible={Modal1Visible} setModal1Visible={(value)=>setModal1Visible(value)}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CardCitasCliente"]},"metadata":{},"sourceType":"module"}